#foreign(header = "<time.h>")
#foreign(preamble = "typedef struct tm tm_t;")

@fake("This only specifies the fields mandated by the C standard")
@foreign
struct tm_t {
    tm_sec: int;
    tm_min: int;
    tm_hour: int;
    tm_mday: int;
    tm_mon: int;
    tm_year: int;
    tm_wday: int;
    tm_yday: int;
    tm_isdst: int;
}

@foreign
fn clock() -> clock_t;

@foreign
fn difftime(time1: time_t, time0: time_t) -> double;

@foreign
fn mktime(timeptr: &tm_t) -> time_t;

@foreign
fn time(timer: &time_t) -> time_t;

@foreign
fn asctime(timeptr: &const tm_t) -> *char;

@foreign
fn ctime(timer: &const time_t) -> *char;

@foreign
fn gmtime(timer: &const time_t) -> &tm_t;

@foreign
fn localtime(timer: &const time_t) -> &tm_t;

@foreign
fn strftime(s: *char, maxsize: usize, format: *const char, timeptr: &const tm_t) -> usize;
