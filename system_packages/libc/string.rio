#foreign(header = "<string.h>")

@foreign
def memcpy(s1: &void, s2: &const void, n: usize) -> &void;

@foreign
def memmove(s1: &void, s2: &const void, n: usize) -> &void;

@foreign
def strcpy(s1: *char, s2: *const char) -> *char;

@foreign
def strncpy(s1: *char, s2: *const char, n: usize) -> *char;

@foreign
def strcat(s1: *char, s2: *const char) -> *char;

@foreign
def strncat(s1: *char, s2: *const char, n: usize) -> *char;

@foreign
def memcmp(s1: &const void, s2: &const void, n: usize) -> int;

@foreign
def strcmp(s1: *const char, s2: *const char) -> int;

@foreign
def strcoll(s1: *const char, s2: *const char) -> int;

@foreign
def strncmp(s1: *const char, s2: *const char, n: usize) -> int;

@foreign
def strxfrm(s1: *char, s2: *const char, n: usize) -> usize;

@foreign
def memchr(s: &const void, c: int, n: usize) -> &void;

@foreign
def strchr(s: *const char, c: int) -> *char;

@foreign
def strcspn(s1: *const char, s2: *const char) -> usize;

@foreign
def strpbrk(s1: *const char, s2: *const char) -> *char;

@foreign
def strrchr(s: *const char, c: int) -> *char;

@foreign
def strspn(s1: *const char, s2: *const char) -> usize;

@foreign
def strstr(s1: *const char, s2: *const char) -> *char;

@foreign
def strtok(s1: *char, s2: *const char) -> *char;

@foreign
def memset(s: &void, c: int, n: usize) -> &void;

@foreign
def strerror(errnum: int) -> *char;

@foreign
def strlen(s: *const char) -> usize;

