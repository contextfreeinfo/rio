#foreign(header = "<string.h>")

@foreign
fn memcpy(s1: void&, s2: void const*, n: usize) -> void&;

@foreign
fn memmove(s1: void&, s2: void const*, n: usize) -> void&;

@foreign
fn strcpy(s1: char*, s2: char const*) -> char*;

@foreign
fn strncpy(s1: char*, s2: char const*, n: usize) -> char*;

@foreign
fn strcat(s1: char*, s2: char const*) -> char*;

@foreign
fn strncat(s1: char*, s2: char const*, n: usize) -> char*;

@foreign
fn memcmp(s1: void const*, s2: void const*, n: usize) -> int;

@foreign
fn strcmp(s1: char const*, s2: char const*) -> int;

@foreign
fn strcoll(s1: char const*, s2: char const*) -> int;

@foreign
fn strncmp(s1: char const*, s2: char const*, n: usize) -> int;

@foreign
fn strxfrm(s1: char*, s2: char const*, n: usize) -> usize;

@foreign
fn memchr(s: void const*, c: int, n: usize) -> void&;

@foreign
fn strchr(s: char const*, c: int) -> char*;

@foreign
fn strcspn(s1: char const*, s2: char const*) -> usize;

@foreign
fn strpbrk(s1: char const*, s2: char const*) -> char*;

@foreign
fn strrchr(s: char const*, c: int) -> char*;

@foreign
fn strspn(s1: char const*, s2: char const*) -> usize;

@foreign
fn strstr(s1: char const*, s2: char const*) -> char*;

@foreign
fn strtok(s1: char*, s2: char const*) -> char*;

@foreign
fn memset(s: void&, c: int, n: usize) -> void&;

@foreign
fn strerror(errnum: int) -> char*;

@foreign
fn strlen(s: char const*) -> usize;

