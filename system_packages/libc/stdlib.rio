#foreign(header = "<stdlib.h>")

@foreign
struct div_t {
    quot: int;
    rem: int;
}

@foreign
struct ldiv_t {
    quot: long;
    rem: long;
}

@foreign
struct lldiv_t {
    quot: llong;
    rem: llong;
}

@foreign let mut RAND_MAX: int;

@foreign
def atof(nptr: *const char) -> double;

@foreign
def atoi(nptr: *const char) -> int;

@foreign
def atol(nptr: *const char) -> long;

@foreign
def atoll(nptr: *const char) -> llong;

@foreign
def strtod(nptr: *const char, endptr: **char) -> double;

@foreign
def strtof(nptr: *const char, endptr: **char) -> float;

@foreign
def strtol(nptr: *const char, endptr: **char, base: int) -> long;

@foreign
def strtoll(nptr: *const char, endptr: **char, base: int) -> llong;

@foreign
def strtoul(nptr: *const char, endptr: **char, base: int) -> ulong;

@foreign
def strtoull(nptr: *const char, endptr: **char, base: int) -> ullong;

@foreign
def rand() -> int;

@foreign
def srand(seed: uint);

@foreign
def calloc(nmemb: usize, size: usize) -> &void;

@foreign
def free(ptr: &void);

@foreign
def malloc(size: usize) -> &void;

@foreign
def realloc(ptr: &void, size: usize) -> &void;

@foreign
def abort();

@foreign
def atexit(function: do()) -> int;

@foreign
def exit(status: int);

@foreign
def _Exit(status: int);

@foreign
def getenv(name: *const char) -> *char;

@foreign
def system(string: *const char) -> int;

@foreign
def bsearch(key: &const void, base: &const void, nmemb: usize, size: usize, compar: do(&const void, &const void) -> int) -> &void;

@foreign
def qsort(base: &void, nmemb: usize, size: usize, compar: do(&const void, &const void) -> int);

@foreign
def abs(j: int) -> int;

@foreign
def labs(j: long) -> long;

@foreign
def llabs(j: llong) -> llong;

@foreign
def div(numer: int, denom: int) -> div_t;

@foreign
def ldiv(numer: long, denom: long) -> ldiv_t;

@foreign
def lldiv(numer: llong, denom: llong) -> lldiv_t;

@foreign
def mblen(s: *const char, n: usize) -> int;

@foreign
def mbtowc(pwc: *short, s: *const char, n: usize) -> int;

@foreign
def wctomb(s: *char, wchar: short) -> int;

@foreign
def mbstowcs(pwcs: *short, s: *const char, n: usize) -> usize;

@foreign
def wcstombs(s: *char, pwcs: *const short, n: usize) -> usize;
