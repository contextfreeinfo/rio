#foreign(header = "<stdlib.h>")

@foreign
struct div_t {
    quot: int;
    rem: int;
}

@foreign
struct ldiv_t {
    quot: long;
    rem: long;
}

@foreign
struct lldiv_t {
    quot: llong;
    rem: llong;
}

@foreign let RAND_MAX: int;

@foreign
fn atof(nptr: *const char) -> double;

@foreign
fn atoi(nptr: *const char) -> int;

@foreign
fn atol(nptr: *const char) -> long;

@foreign
fn atoll(nptr: *const char) -> llong;

@foreign
fn strtod(nptr: *const char, endptr: **char) -> double;

@foreign
fn strtof(nptr: *const char, endptr: **char) -> float;

@foreign
fn strtol(nptr: *const char, endptr: **char, base: int) -> long;

@foreign
fn strtoll(nptr: *const char, endptr: **char, base: int) -> llong;

@foreign
fn strtoul(nptr: *const char, endptr: **char, base: int) -> ulong;

@foreign
fn strtoull(nptr: *const char, endptr: **char, base: int) -> ullong;

@foreign
fn rand() -> int;

@foreign
fn srand(seed: uint);

@foreign
fn calloc(nmemb: usize, size: usize) -> &void;

@foreign
fn free(ptr: &void);

@foreign
fn malloc(size: usize) -> &void;

@foreign
fn realloc(ptr: &void, size: usize) -> &void;

@foreign
fn abort();

@foreign
fn atexit(function: fn()) -> int;

@foreign
fn exit(status: int);

@foreign
fn _Exit(status: int);

@foreign
fn getenv(name: *const char) -> *char;

@foreign
fn system(string: *const char) -> int;

@foreign
fn bsearch(key: &const void, base: &const void, nmemb: usize, size: usize, compar: fn(&const void, &const void) -> int) -> &void;

@foreign
fn qsort(base: &void, nmemb: usize, size: usize, compar: fn(&const void, &const void) -> int);

@foreign
fn abs(j: int) -> int;

@foreign
fn labs(j: long) -> long;

@foreign
fn llabs(j: llong) -> llong;

@foreign
fn div(numer: int, denom: int) -> div_t;

@foreign
fn ldiv(numer: long, denom: long) -> ldiv_t;

@foreign
fn lldiv(numer: llong, denom: llong) -> lldiv_t;

@foreign
fn mblen(s: *const char, n: usize) -> int;

@foreign
fn mbtowc(pwc: *short, s: *const char, n: usize) -> int;

@foreign
fn wctomb(s: *char, wchar: short) -> int;

@foreign
fn mbstowcs(pwcs: *short, s: *const char, n: usize) -> usize;

@foreign
fn wcstombs(s: *char, pwcs: *const short, n: usize) -> usize;
