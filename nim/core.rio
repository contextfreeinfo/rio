Bool pub = native

Int pub = native

IntRange pub = struct of
  from is Int
  thru is Int
end

String pub = native

Type pub = for Interface is (Type Interface) be native

Void pub = native

each pub for range is IntRange to Void = native

native = native

printf pub = for
  pattern is String
  ...
to Int be native

pub = native

struct = native

thru pub for from is Int thru is Int to IntRange = _ from thru

void pub = for any is Any to Void be ()

# Int like Number -> Int is (Type Number)
eq pub for x is Int y is Int to Bool = native
le pub for x is Int y is Int to Bool = native
add pub for x is Int y is Int to Int = native
sub pub for x is Int y is Int to Int = native
