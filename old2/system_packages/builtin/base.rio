// TODO Instead use `union Try<Val> switch {...}` with common error enum type?
union Result<Val, Err> switch {
  Ok => val: Val;
  Err => err: Err;
}

// TODO Expando enums like enum... Err {Thing, More};
enum Err {}

typedef Item = void;

@ordered
struct Slice<Item> {
  items: *Item;
  length: usize;
}

// TODO Maybe should use separate Val type ...
union Try<Item> switch {
  Ok => val: Item;
  Err => err: Err;
}
