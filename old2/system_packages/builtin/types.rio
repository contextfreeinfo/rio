#foreign(header = "<limits.h>")
#foreign(header = "<stdint.h>")

#static_assert(sizeof(bool) == 1)
#static_assert(sizeof(char) == 1)
#static_assert(sizeof(uchar) == 1)
#static_assert(sizeof(schar) == 1)
#static_assert(sizeof(short) == 2)
#static_assert(sizeof(ushort) == 2)
#static_assert(sizeof(int) == 4)
#static_assert(sizeof(uint) == 4)
#static_assert(sizeof(ullong) == 8)
#static_assert(sizeof(llong) == 8)
#static_assert(sizeof(float) == 4)
#static_assert(sizeof(double) == 8)

#static_assert(alignof(bool) == sizeof(bool))
#static_assert(alignof(char) == sizeof(char))
#static_assert(alignof(uchar) == sizeof(uchar))
#static_assert(alignof(schar) == sizeof(schar))
#static_assert(alignof(short) == sizeof(short))
#static_assert(alignof(ushort) == sizeof(ushort))
#static_assert(alignof(int) == sizeof(int))
#static_assert(alignof(uint) == sizeof(uint))
#static_assert(alignof(long) == sizeof(long))
#static_assert(alignof(ulong) == sizeof(ulong))
#static_assert(alignof(llong) == sizeof(llong))
#static_assert(alignof(ullong) == sizeof(ullong))
#static_assert(alignof(float) == sizeof(float))
#static_assert(alignof(double) == sizeof(double))

@foreign("int8_t")
typedef int8 = schar;

@foreign("uint8_t")
typedef uint8 = uchar;

@foreign("int16_t")
typedef int16 = short;

@foreign("uint16_t")
typedef uint16 = ushort;

@foreign("int32_t")
typedef int32 = int;

@foreign("uint32_t")
typedef uint32 = uint;

@foreign("int64_t")
typedef int64 = llong;

@foreign("uint64_t")
typedef uint64 = ullong;

@foreign
// TODO Why is void* const but not void&???
const NULL = 0 as *void;

@foreign
const false = 0 as bool;

@foreign
const true = 1 as bool;

const UCHAR_MIN = 0 as uchar;

@foreign
const UCHAR_MAX = 0xff as uchar;

@foreign
const SCHAR_MIN = -128 as schar;

@foreign
const SCHAR_MAX = 127 as schar;

@foreign
const CHAR_MIN = SCHAR_MIN as char;

@foreign
const CHAR_MAX = SCHAR_MAX as char;

@foreign("SHRT_MIN")
const SHORT_MIN = -32768 as short;

@foreign("SHRT_MAX")
const SHORT_MAX = 32767 as short;

const USHORT_MIN = 0 as ushort;

@foreign("USHRT_MAX")
const USHORT_MAX = 0xffff as ushort;

@foreign
const INT_MIN  = (-2147483647 - 1) as int;

@foreign
const INT_MAX = 2147483647 as int;

const UINT_MIN = 0 as uint;

@foreign
const UINT_MAX = 0xffffffff as uint;

@foreign
const LLONG_MIN = (-9223372036854775807ll - 1) as llong;

@foreign
const LLONG_MAX = 9223372036854775807ll as llong;

const ULLONG_MIN = 0 as ullong;

@foreign
const ULLONG_MAX = 0xffffffffffffffffull as ullong;

const UINT8_MIN = UCHAR_MIN;

@foreign
const UINT8_MAX = UCHAR_MAX;

@foreign
const INT8_MIN = SCHAR_MIN;

@foreign
const INT8_MAX = SCHAR_MAX;

const UINT16_MIN = USHORT_MIN;

@foreign
const UINT16_MAX = USHORT_MAX;

@foreign
const INT16_MIN = SHORT_MIN;

@foreign
const INT16_MAX = SHORT_MAX;

const UINT32_MIN = UINT_MIN;

@foreign
const UINT32_MAX = UINT_MAX;

@foreign
const INT32_MIN = INT_MIN;

@foreign
const INT32_MAX = INT_MAX;

const UINT64_MIN = ULLONG_MIN;

@foreign
const UINT64_MAX = ULLONG_MAX;

@foreign
const INT64_MIN = LLONG_MIN;

@foreign
const INT64_MAX = LLONG_MAX;
