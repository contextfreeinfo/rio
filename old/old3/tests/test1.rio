use "c"
use "./test1-other"
use "./things"
include "./test1-more"

do
  name = "world"
  age = 75
  score: float = 4
  # Span examples.
  scores = [45.0, 63.1, 22.2, -8.3]
  test_indexing(scores)
  mores = [1, -5]
  cores: [int] = []
  words = ["hi", "there"]
  # Loop with receiver.
  for word in words
    printf("word: %s\n", word)
  end
  # Loop alone.
  for words
    printf("hi\n")
  end
  # Call functions.
  greet(name, age)
  # Struct instance literal, with shorthand.
  person: Person = {name, age = 80, scores}
  hey = person.name
  show_persons([
    # TODO Go to structs by ref by default.
    person,
    {age = 5, name = "Me", scores = [2.5]},
    {age = 25, name = "Other", scores = [4.2, 4.5]},
  ])
  # a.b().c.d
  printf("sum: %d\n", sum(5))
  use_range()
end do

Person struct
  name: string
  age: int
  scores: [float]
end

show_scores proc(scores: [float])
  printf("scores:")
  for score in scores
    printf(" %g", score)
  end
  printf("\n")
end

test_indexing proc(scores: [float])
  score = scores[1]
  printf("score from span: %g\n", score)
  show_scores(scores)
  #~ r = 0..1
  #~ slice = scores[r]
  #~ show_scores(slice)
end
