
real	0m0.399s
user	0m0.266s
sys	0m0.125s
==654== Memcheck, a memory error detector
==654== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==654== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==654== Command: ./bin/rio tests/test1.rio
==654== 
==654== error calling PR_SET_PTRACER, vgdb might block
#include <stdint.h>
#include <stdio.h>

// tests/test1-other.rio

const char* const tests_test1_other_message = "Hello";

// tests/test1.rio

typedef struct tests_test1_Person {
  const char* name;
  int32_t age;
} tests_test1_Person;

typedef struct rio_Span_i32 {
  int32_t* items;
  size_t len;
} rio_Span_i32;

typedef struct rio_Span_string {
  const char** items;
  size_t len;
} rio_Span_string;

void tests_test1_greet(const char* const name, int32_t const age);
void tests_test1_greet_person(tests_test1_Person const person);

int main() {
  const char* const name = "world";
  int32_t const age = 75;
  rio_Span_i32 const scores = {(int32_t[]){45, 63, 22, -8}, 4};
  rio_Span_i32 const mores = {(int32_t[]){1}, 1};
  rio_Span_string const words = {(const char*[]){"hi", "there"}, 2};
  {
    rio_Span_string rio_span = words;
    for (size_t rio_index = 0; rio_index < rio_span.len; rio_index += 1) {
      const char* word = rio_span.items[rio_index];
      printf("word: %s\n", word);
    }
  }
  {
    rio_Span_string rio_span = words;
    for (size_t rio_index = 0; rio_index < rio_span.len; rio_index += 1) {
      printf("hi\n");
    }
  }
  tests_test1_greet(name, age);
  tests_test1_greet_person((tests_test1_Person){.name = name, .age = 80});
}

void tests_test1_greet(const char* const name, int32_t const age) {
  printf("%s, %s!\n", tests_test1_other_message, name);
  printf("You are %d years old.\n", age);
}

void tests_test1_greet_person(tests_test1_Person const person) {
  printf("%s is %d years old.\n", person.name, person.age);
}
==654== 
==654== HEAP SUMMARY:
==654==     in use at exit: 0 bytes in 0 blocks
==654==   total heap usage: 98 allocs, 98 frees, 155,941 bytes allocated
==654== 
==654== All heap blocks were freed -- no leaks are possible
==654== 
==654== For counts of detected and suppressed errors, rerun with: -v
==654== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
	Command being timed: "valgrind --leak-check=full --show-leak-kinds=all ./bin/rio tests/test1.rio"
	User time (seconds): 0.62
	System time (seconds): 0.03
	Percent of CPU this job got: 98%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.66
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 50656
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 14302
	Voluntary context switches: 0
	Involuntary context switches: 0
	Swaps: 0
	File system inputs: 0
	File system outputs: 0
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0

-rwxrwxrwx 1 tjpalmer tjpalmer 173064 Aug 17 07:17 bin/rio
