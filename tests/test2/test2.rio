struct vec2 {
    x: float;
    y: float;
}

def add2(a: vec2, b: vec2) -> vec2 {
    return (a.x + b.x, a.y + b.y);
}

def sub2(a: vec2, b: vec2) -> vec2 {
    return (a.x - b.x, a.y - b.y);
}

def neg2(a: vec2) -> vec2 {
    return (-a.x, -a.y);
}

def mul2(a: float, b: vec2) -> vec2 {
    return (a * b.x, a * b.y);
}

def addmul2(
    a: vec2,
    b: float,
    c: vec2,
) -> vec2 {
    return add2(a, mul2(b, c));
}

def dot2(a: vec2, b: vec2) -> float {
    return a.x * b.x + a.y * b.y;
}

def len2(a: vec2) -> float {
    return sqrt(dot2(a, a));
}

def unit2(a: vec2) -> vec2 {
    return mul2(1/len2(a), a);
}

def perp2(a: vec2) -> vec2 {
    return (-a.y, a.x);
}

def dir2(a: vec2, b: vec2) -> vec2 {
    return unit2(sub2(b, a));
}

def rot2(a: float, b: vec2) -> vec2 {
    let c = cos(a);
    let s = sin(a);
    return (c * b.x - s * b.y, s * b.x + c * b.y);
}
