include "**"

main = for () be
  # Abomination testing.
  a: b c: d e f: g
  a: b: c: d: e: f: g
  a: hi? there
  a: (hi?) there
  aha.of
    # This needs to chain.
    b c
    d.e.f g
  end a be blah
  a be good be bad
  a b
  a for b to c be d
  a b
end

bling1.(here there)
bling2.(here there, d e)
bling.((here there) (d e))
bling.(
  here there
  d e
)
# Maybe useless, but should this be `(here there) bling` or `here bling there`?
bling.of here there
# Parse differently?
bling .of here there
a1.b.c
a1 .b .c

a = 5 with doc "hello"
be 4
b = 3 with doc "hi" be 5

for a
to there
be 3

for
  a
to
  there
be 3

d = 4 with
  doc "hi"
  think 2
end
e = 5

for a as b c as d to e be f
for (apple as banana) (c as d) to e be f
for
  a as b g
  c as d
to e be f
for gopher: (a as b) h: (c as d) to e be f
for (gopher: a as b) (h: c as d) to e be f
for
  gopher: a as b
  h: c as d
to e be f
for a as b to c as d be e
for a as b = c to d be e
for (a as b = c) to d be e

-5
4 + -5

a = b = c

a.b?.c.d.e?.f?.g

1.5.c?.d
1 .5
-1.5
-1.2.a.3
(-1.2).a.3
-b.c.a.3
a .5
a 0.5
5.-1

things = _ 1 2 "hi" 4
things = (list _) 1 2 "hi" 4

a b, c d, e f
a of b: c, d: e
a of _ b: c d: e
a b: c d: e
a b: c, d: e
a: b, c: d

a (b) (c d)

for a b c to d e f be a + b + c

(a) (b)

(.cat 1)

# These two should be equivalent
a.((b c) (d e))
(d (b a c) e)

a, b, c

# All the same.
(boo
  baa
  bee
)
(boo baa bee)
(
  boo
  baa
  bee
)
# All the same.
boo (baa bee)
boo of baa bee
(boo (baa bee))
(
  boo
  baa bee
)

5 things

a.of
end

wild.of
  1, 2, 3
  length
end

wild of
  1, 2, 3
  length
end

wilder.of
  a b
end

wildest of
  wilder.of
    a b
  end
  c
end

world.of
  # Of or splat inside .of is degenerate. Probably who cares on semantics, and just validate against it.
  of
    hi there
    kids
  end
  more
end

more of
  (hi)
  there
end

what.of
  that.of
    a b
    c d
  end
  e f
  g
end

persons.of
  filter be it.age >= 18
  map be it.name
end

a => b => (c = d = e) => d

x * (y + z) + w / v

text = (cat
  "I once met a fish from Chicago
  # Comment.
  "Who I don't know what happens next, y'all" # "
)

text = cat of
  "I once met a fish from Chicago
  # Comment.
  "Who I don't know what happens next, y'all
  # More comment.
end

text = (
  "I once met a fish from Chicago
  # Comment.
  "Who I don't know what happens next, y'all
  # More comment.
)

text = of
  "I once met a fish from Chicago
  # Comment.
  "Who I don't know what happens next, y'all
  # More comment.
end

text =
  "I once met a fish from Chicago
  # Comment
  "Who I don't know what happens next, y'all" # "

text =
  "I once met a fish from Chicago
  # Comment
  "Who I don't know what happens next, y'all
  ""
