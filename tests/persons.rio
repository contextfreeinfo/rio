use "c"

do
  # Assignment here declares new *const* values
  name = "Alice"
  age = 40
  show-prices of
    persons = _ of
      # We know if there are positionals or not, and we store in lock file.
      # Or force positional with `(parens)`?
      _ age name
      _ name: "Bernie" age: 14
      _ name: "Clara" age: 9
      _ name: "Darlene" age: 68
    end
  end
end do

Person = struct
  name as String
  age as Int
end

show-prices = for persons as List Person do
  persons.each for person do
    printf "%s pays $%.2f\n" person.name person.age.ticket-price
  end
end

ticket-price = for age as Int to Float be
  when
    case age <= 11 be 6.75
    case age >= 62 be 7.00
    else be
      if age < 18 be
        trace "You think age \(age) gets child prices here?"
      end
      11.00
    end
  end when
end ticket-price

# List Item = ...
# sort of
#   Item with Comparable: ...
# end = ...
# sort (Item with Comparable: ...) (n as Int: ...) = ...
