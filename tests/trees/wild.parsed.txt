NodeKind.block
  NodeKind.call
    NodeKind.leaf: TokenKind.key_include include
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.string
      NodeKind.leaf: TokenKind.quote_double "
      NodeKind.leaf: TokenKind.string_text **
      NodeKind.leaf: TokenKind.quote_double "
    /NodeKind.string
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.leaf: TokenKind.id main
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.fun
      NodeKind.fun_for
        NodeKind.leaf: TokenKind.key_for for
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.round
          NodeKind.leaf: TokenKind.round_begin (
          NodeKind.leaf: TokenKind.round_end )
        /NodeKind.round
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.fun_for
      NodeKind.be
        NodeKind.leaf: TokenKind.key_be be
        NodeKind.block
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
            NodeKind.leaf: TokenKind.comment # Abomination testing.
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.colon
            NodeKind.leaf: TokenKind.id a
            NodeKind.leaf: TokenKind.op_colon :
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.call
              NodeKind.leaf: TokenKind.id b
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.colon
                NodeKind.leaf: TokenKind.id c
                NodeKind.leaf: TokenKind.op_colon :
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id d
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
              /NodeKind.colon
              NodeKind.leaf: TokenKind.id e
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.colon
                NodeKind.leaf: TokenKind.id f
                NodeKind.leaf: TokenKind.op_colon :
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id g
              /NodeKind.colon
            /NodeKind.call
          /NodeKind.colon
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.colon
            NodeKind.leaf: TokenKind.id a
            NodeKind.leaf: TokenKind.op_colon :
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.colon
              NodeKind.leaf: TokenKind.id b
              NodeKind.leaf: TokenKind.op_colon :
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.colon
                NodeKind.leaf: TokenKind.id c
                NodeKind.leaf: TokenKind.op_colon :
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.colon
                  NodeKind.leaf: TokenKind.id d
                  NodeKind.leaf: TokenKind.op_colon :
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.colon
                    NodeKind.leaf: TokenKind.id e
                    NodeKind.leaf: TokenKind.op_colon :
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.colon
                      NodeKind.leaf: TokenKind.id f
                      NodeKind.leaf: TokenKind.op_colon :
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.leaf: TokenKind.id g
                    /NodeKind.colon
                  /NodeKind.colon
                /NodeKind.colon
              /NodeKind.colon
            /NodeKind.colon
          /NodeKind.colon
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.colon
            NodeKind.leaf: TokenKind.id a
            NodeKind.leaf: TokenKind.op_colon :
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.question
              NodeKind.call
                NodeKind.leaf: TokenKind.id hi
                NodeKind.leaf: TokenKind.op_question ?
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id there
              /NodeKind.call
            /NodeKind.question
          /NodeKind.colon
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.colon
            NodeKind.leaf: TokenKind.id a
            NodeKind.leaf: TokenKind.op_colon :
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.call
              NodeKind.round
                NodeKind.leaf: TokenKind.round_begin (
                NodeKind.block
                  NodeKind.question
                    NodeKind.leaf: TokenKind.id hi
                    NodeKind.leaf: TokenKind.op_question ?
                  /NodeKind.question
                /NodeKind.block
                NodeKind.leaf: TokenKind.round_end )
              /NodeKind.round
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.id there
            /NodeKind.call
          /NodeKind.colon
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.call
            NodeKind.dot
              NodeKind.leaf: TokenKind.id aha
              NodeKind.leaf: TokenKind.op_dot .
              NodeKind.of
                NodeKind.leaf: TokenKind.key_of of
                NodeKind.block
                  NodeKind.space
                    NodeKind.leaf: TokenKind.vspace 

                    NodeKind.leaf: TokenKind.hspace     
                    NodeKind.leaf: TokenKind.comment # This needs to chain.
                    NodeKind.leaf: TokenKind.vspace 

                    NodeKind.leaf: TokenKind.hspace     
                  /NodeKind.space
                  NodeKind.call
                    NodeKind.leaf: TokenKind.id b
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.leaf: TokenKind.id c
                  /NodeKind.call
                  NodeKind.space
                    NodeKind.leaf: TokenKind.vspace 

                    NodeKind.leaf: TokenKind.hspace     
                  /NodeKind.space
                  NodeKind.call
                    NodeKind.dot
                      NodeKind.dot
                        NodeKind.leaf: TokenKind.id d
                        NodeKind.leaf: TokenKind.op_dot .
                        NodeKind.leaf: TokenKind.id e
                      /NodeKind.dot
                      NodeKind.leaf: TokenKind.op_dot .
                      NodeKind.leaf: TokenKind.id f
                    /NodeKind.dot
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.leaf: TokenKind.id g
                  /NodeKind.call
                  NodeKind.space
                    NodeKind.leaf: TokenKind.vspace 

                    NodeKind.leaf: TokenKind.hspace   
                  /NodeKind.space
                /NodeKind.block
                NodeKind.end
                  NodeKind.leaf: TokenKind.key_end end
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.id a
                /NodeKind.end
              /NodeKind.of
            /NodeKind.dot
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.be
              NodeKind.leaf: TokenKind.key_be be
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.block
                NodeKind.leaf: TokenKind.id blah
            /NodeKind.be
          /NodeKind.call
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.call
            NodeKind.leaf: TokenKind.id a
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.be
              NodeKind.leaf: TokenKind.key_be be
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.block
                NodeKind.call
                  NodeKind.leaf: TokenKind.id good
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.be
                    NodeKind.leaf: TokenKind.key_be be
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.block
                      NodeKind.leaf: TokenKind.id bad
                  /NodeKind.be
                /NodeKind.call
              /NodeKind.block
            /NodeKind.be
          /NodeKind.call
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.call
            NodeKind.leaf: TokenKind.id a
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id b
          /NodeKind.call
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.call
            NodeKind.leaf: TokenKind.id a
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.fun
              NodeKind.fun_for
                NodeKind.leaf: TokenKind.key_for for
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id b
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
              /NodeKind.fun_for
              NodeKind.fun_to
                NodeKind.leaf: TokenKind.key_to to
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.block
                  NodeKind.leaf: TokenKind.id c
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                /NodeKind.block
              /NodeKind.fun_to
              NodeKind.be
                NodeKind.leaf: TokenKind.key_be be
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.block
                  NodeKind.leaf: TokenKind.id d
              /NodeKind.be
            /NodeKind.fun
          /NodeKind.call
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.call
            NodeKind.leaf: TokenKind.id a
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id b
          /NodeKind.call
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

        /NodeKind.block
        NodeKind.end
          NodeKind.leaf: TokenKind.key_end end
      /NodeKind.be
    /NodeKind.fun
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.dot
    NodeKind.leaf: TokenKind.id bling1
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.round
      NodeKind.leaf: TokenKind.round_begin (
      NodeKind.block
        NodeKind.call
          NodeKind.leaf: TokenKind.id here
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id there
        /NodeKind.call
      /NodeKind.block
      NodeKind.leaf: TokenKind.round_end )
    /NodeKind.round
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.dot
    NodeKind.leaf: TokenKind.id bling2
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.round
      NodeKind.leaf: TokenKind.round_begin (
      NodeKind.block
        NodeKind.list
          NodeKind.call
            NodeKind.leaf: TokenKind.id here
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id there
          /NodeKind.call
          NodeKind.leaf: TokenKind.op_comma ,
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.call
            NodeKind.leaf: TokenKind.id d
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id e
          /NodeKind.call
        /NodeKind.list
      /NodeKind.block
      NodeKind.leaf: TokenKind.round_end )
    /NodeKind.round
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.dot
    NodeKind.leaf: TokenKind.id bling
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.round
      NodeKind.leaf: TokenKind.round_begin (
      NodeKind.block
        NodeKind.call
          NodeKind.round
            NodeKind.leaf: TokenKind.round_begin (
            NodeKind.block
              NodeKind.call
                NodeKind.leaf: TokenKind.id here
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id there
              /NodeKind.call
            /NodeKind.block
            NodeKind.leaf: TokenKind.round_end )
          /NodeKind.round
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.round
            NodeKind.leaf: TokenKind.round_begin (
            NodeKind.block
              NodeKind.call
                NodeKind.leaf: TokenKind.id d
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id e
              /NodeKind.call
            /NodeKind.block
            NodeKind.leaf: TokenKind.round_end )
          /NodeKind.round
        /NodeKind.call
      /NodeKind.block
      NodeKind.leaf: TokenKind.round_end )
    /NodeKind.round
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.dot
    NodeKind.leaf: TokenKind.id bling
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.round
      NodeKind.leaf: TokenKind.round_begin (
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.call
          NodeKind.leaf: TokenKind.id here
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id there
        /NodeKind.call
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.call
          NodeKind.leaf: TokenKind.id d
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id e
        /NodeKind.call
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
      NodeKind.leaf: TokenKind.round_end )
    /NodeKind.round
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.comment # Maybe useless, but should this be `(here there) bling` or `here bling there`?
    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.dot
    NodeKind.leaf: TokenKind.id bling
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.call
          NodeKind.leaf: TokenKind.id here
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id there
        /NodeKind.call
      /NodeKind.block
    /NodeKind.of
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.comment # Parse differently?
    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.dot
    NodeKind.leaf: TokenKind.id bling
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.call
          NodeKind.leaf: TokenKind.id here
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id there
        /NodeKind.call
      /NodeKind.block
    /NodeKind.of
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.dot
    NodeKind.dot
      NodeKind.leaf: TokenKind.id a1
      NodeKind.leaf: TokenKind.op_dot .
      NodeKind.leaf: TokenKind.id b
    /NodeKind.dot
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.leaf: TokenKind.id c
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.call
    NodeKind.dot
      NodeKind.leaf: TokenKind.id a1
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.op_dot .
      NodeKind.leaf: TokenKind.id b
    /NodeKind.dot
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.leaf: TokenKind.id c
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.leaf: TokenKind.id a
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.int 5
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.fun
        NodeKind.fun_with
          NodeKind.leaf: TokenKind.key_with with
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.block
            NodeKind.call
              NodeKind.leaf: TokenKind.id doc
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.string
                NodeKind.leaf: TokenKind.quote_double "
                NodeKind.leaf: TokenKind.string_text hello
                NodeKind.leaf: TokenKind.quote_double "
              /NodeKind.string
            /NodeKind.call
          /NodeKind.block
        /NodeKind.fun_with
      /NodeKind.fun
    /NodeKind.call
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.be
    NodeKind.leaf: TokenKind.key_be be
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.block
      NodeKind.leaf: TokenKind.int 4
  /NodeKind.be
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.assign
    NodeKind.leaf: TokenKind.id b
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.int 3
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.fun
        NodeKind.fun_with
          NodeKind.leaf: TokenKind.key_with with
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.block
            NodeKind.call
              NodeKind.leaf: TokenKind.id doc
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.string
                NodeKind.leaf: TokenKind.quote_double "
                NodeKind.leaf: TokenKind.string_text hi
                NodeKind.leaf: TokenKind.quote_double "
              /NodeKind.string
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
            /NodeKind.call
          /NodeKind.block
        /NodeKind.fun_with
        NodeKind.be
          NodeKind.leaf: TokenKind.key_be be
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.block
            NodeKind.leaf: TokenKind.int 5
        /NodeKind.be
      /NodeKind.fun
    /NodeKind.call
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.fun
    NodeKind.fun_for
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id a
    /NodeKind.fun_for
  /NodeKind.fun
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.fun
    NodeKind.fun_to
      NodeKind.leaf: TokenKind.key_to to
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id there
    /NodeKind.fun_to
  /NodeKind.fun
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.be
    NodeKind.leaf: TokenKind.key_be be
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.block
      NodeKind.leaf: TokenKind.int 3
  /NodeKind.be
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.fun
    NodeKind.fun_for
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.leaf: TokenKind.id a
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
    /NodeKind.fun_for
    NodeKind.fun_to
      NodeKind.leaf: TokenKind.key_to to
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.leaf: TokenKind.id there
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
    /NodeKind.fun_to
    NodeKind.be
      NodeKind.leaf: TokenKind.key_be be
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.int 3
    /NodeKind.be
  /NodeKind.fun
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.leaf: TokenKind.id d
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.int 4
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.fun
        NodeKind.fun_with
          NodeKind.leaf: TokenKind.key_with with
          NodeKind.block
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

              NodeKind.leaf: TokenKind.hspace   
            /NodeKind.space
            NodeKind.call
              NodeKind.leaf: TokenKind.id doc
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.string
                NodeKind.leaf: TokenKind.quote_double "
                NodeKind.leaf: TokenKind.string_text hi
                NodeKind.leaf: TokenKind.quote_double "
              /NodeKind.string
            /NodeKind.call
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

              NodeKind.leaf: TokenKind.hspace   
            /NodeKind.space
            NodeKind.call
              NodeKind.leaf: TokenKind.id think
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.int 2
            /NodeKind.call
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

          /NodeKind.block
          NodeKind.end
            NodeKind.leaf: TokenKind.key_end end
        /NodeKind.fun_with
      /NodeKind.fun
    /NodeKind.call
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.assign
    NodeKind.leaf: TokenKind.id e
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.int 5
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.fun
    NodeKind.fun_for
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.as
        NodeKind.as
          NodeKind.leaf: TokenKind.id a
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.key_as as
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.call
            NodeKind.leaf: TokenKind.id b
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id c
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
          /NodeKind.call
        /NodeKind.as
        NodeKind.leaf: TokenKind.key_as as
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id d
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.as
    /NodeKind.fun_for
    NodeKind.fun_to
      NodeKind.leaf: TokenKind.key_to to
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id e
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.block
    /NodeKind.fun_to
    NodeKind.be
      NodeKind.leaf: TokenKind.key_be be
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id f
    /NodeKind.be
  /NodeKind.fun
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.fun
    NodeKind.fun_for
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.call
        NodeKind.round
          NodeKind.leaf: TokenKind.round_begin (
          NodeKind.block
            NodeKind.as
              NodeKind.leaf: TokenKind.id apple
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.key_as as
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.id banana
            /NodeKind.as
          /NodeKind.block
          NodeKind.leaf: TokenKind.round_end )
        /NodeKind.round
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.round
          NodeKind.leaf: TokenKind.round_begin (
          NodeKind.block
            NodeKind.as
              NodeKind.leaf: TokenKind.id c
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.key_as as
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.id d
            /NodeKind.as
          /NodeKind.block
          NodeKind.leaf: TokenKind.round_end )
        /NodeKind.round
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.call
    /NodeKind.fun_for
    NodeKind.fun_to
      NodeKind.leaf: TokenKind.key_to to
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id e
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.block
    /NodeKind.fun_to
    NodeKind.be
      NodeKind.leaf: TokenKind.key_be be
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id f
    /NodeKind.be
  /NodeKind.fun
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.fun
    NodeKind.fun_for
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.as
          NodeKind.leaf: TokenKind.id a
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.key_as as
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.call
            NodeKind.leaf: TokenKind.id b
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id g
          /NodeKind.call
        /NodeKind.as
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.as
          NodeKind.leaf: TokenKind.id c
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.key_as as
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id d
        /NodeKind.as
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
    /NodeKind.fun_for
    NodeKind.fun_to
      NodeKind.leaf: TokenKind.key_to to
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id e
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.block
    /NodeKind.fun_to
    NodeKind.be
      NodeKind.leaf: TokenKind.key_be be
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id f
    /NodeKind.be
  /NodeKind.fun
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.fun
    NodeKind.fun_for
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.call
        NodeKind.colon
          NodeKind.leaf: TokenKind.id gopher
          NodeKind.leaf: TokenKind.op_colon :
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.round
            NodeKind.leaf: TokenKind.round_begin (
            NodeKind.block
              NodeKind.as
                NodeKind.leaf: TokenKind.id a
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.key_as as
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id b
              /NodeKind.as
            /NodeKind.block
            NodeKind.leaf: TokenKind.round_end )
          /NodeKind.round
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
        /NodeKind.colon
        NodeKind.colon
          NodeKind.leaf: TokenKind.id h
          NodeKind.leaf: TokenKind.op_colon :
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.round
            NodeKind.leaf: TokenKind.round_begin (
            NodeKind.block
              NodeKind.as
                NodeKind.leaf: TokenKind.id c
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.key_as as
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id d
              /NodeKind.as
            /NodeKind.block
            NodeKind.leaf: TokenKind.round_end )
          /NodeKind.round
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
        /NodeKind.colon
      /NodeKind.call
    /NodeKind.fun_for
    NodeKind.fun_to
      NodeKind.leaf: TokenKind.key_to to
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id e
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.block
    /NodeKind.fun_to
    NodeKind.be
      NodeKind.leaf: TokenKind.key_be be
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id f
    /NodeKind.be
  /NodeKind.fun
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.fun
    NodeKind.fun_for
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.call
        NodeKind.round
          NodeKind.leaf: TokenKind.round_begin (
          NodeKind.block
            NodeKind.colon
              NodeKind.leaf: TokenKind.id gopher
              NodeKind.leaf: TokenKind.op_colon :
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.as
                NodeKind.leaf: TokenKind.id a
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.key_as as
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id b
              /NodeKind.as
            /NodeKind.colon
          /NodeKind.block
          NodeKind.leaf: TokenKind.round_end )
        /NodeKind.round
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.round
          NodeKind.leaf: TokenKind.round_begin (
          NodeKind.block
            NodeKind.colon
              NodeKind.leaf: TokenKind.id h
              NodeKind.leaf: TokenKind.op_colon :
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.as
                NodeKind.leaf: TokenKind.id c
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.key_as as
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id d
              /NodeKind.as
            /NodeKind.colon
          /NodeKind.block
          NodeKind.leaf: TokenKind.round_end )
        /NodeKind.round
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.call
    /NodeKind.fun_for
    NodeKind.fun_to
      NodeKind.leaf: TokenKind.key_to to
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id e
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.block
    /NodeKind.fun_to
    NodeKind.be
      NodeKind.leaf: TokenKind.key_be be
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id f
    /NodeKind.be
  /NodeKind.fun
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.fun
    NodeKind.fun_for
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.colon
          NodeKind.leaf: TokenKind.id gopher
          NodeKind.leaf: TokenKind.op_colon :
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.as
            NodeKind.leaf: TokenKind.id a
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.key_as as
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id b
          /NodeKind.as
        /NodeKind.colon
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.colon
          NodeKind.leaf: TokenKind.id h
          NodeKind.leaf: TokenKind.op_colon :
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.as
            NodeKind.leaf: TokenKind.id c
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.key_as as
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id d
          /NodeKind.as
        /NodeKind.colon
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
    /NodeKind.fun_for
    NodeKind.fun_to
      NodeKind.leaf: TokenKind.key_to to
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id e
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.block
    /NodeKind.fun_to
    NodeKind.be
      NodeKind.leaf: TokenKind.key_be be
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id f
    /NodeKind.be
  /NodeKind.fun
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.fun
    NodeKind.fun_for
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.as
        NodeKind.leaf: TokenKind.id a
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.key_as as
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id b
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.as
    /NodeKind.fun_for
    NodeKind.fun_to
      NodeKind.leaf: TokenKind.key_to to
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.as
          NodeKind.leaf: TokenKind.id c
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.key_as as
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id d
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
        /NodeKind.as
      /NodeKind.block
    /NodeKind.fun_to
    NodeKind.be
      NodeKind.leaf: TokenKind.key_be be
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id e
    /NodeKind.be
  /NodeKind.fun
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.assign
    NodeKind.fun
      NodeKind.fun_for
        NodeKind.leaf: TokenKind.key_for for
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.as
          NodeKind.leaf: TokenKind.id a
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.key_as as
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id b
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
        /NodeKind.as
      /NodeKind.fun_for
    /NodeKind.fun
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.id c
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.fun
        NodeKind.fun_to
          NodeKind.leaf: TokenKind.key_to to
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.block
            NodeKind.leaf: TokenKind.id d
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
          /NodeKind.block
        /NodeKind.fun_to
        NodeKind.be
          NodeKind.leaf: TokenKind.key_be be
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.block
            NodeKind.leaf: TokenKind.id e
        /NodeKind.be
      /NodeKind.fun
    /NodeKind.call
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.fun
    NodeKind.fun_for
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.round
        NodeKind.leaf: TokenKind.round_begin (
        NodeKind.block
          NodeKind.assign
            NodeKind.as
              NodeKind.leaf: TokenKind.id a
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.key_as as
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.id b
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
            /NodeKind.as
            NodeKind.leaf: TokenKind.op_eq =
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id c
          /NodeKind.assign
        /NodeKind.block
        NodeKind.leaf: TokenKind.round_end )
      /NodeKind.round
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
    /NodeKind.fun_for
    NodeKind.fun_to
      NodeKind.leaf: TokenKind.key_to to
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id d
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.block
    /NodeKind.fun_to
    NodeKind.be
      NodeKind.leaf: TokenKind.key_be be
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.leaf: TokenKind.id e
    /NodeKind.be
  /NodeKind.fun
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.sign_int
    NodeKind.leaf: TokenKind.op_sub -
    NodeKind.leaf: TokenKind.int 5
  /NodeKind.sign_int
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.add
    NodeKind.leaf: TokenKind.int 4
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_add +
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.sign_int
      NodeKind.leaf: TokenKind.op_sub -
      NodeKind.leaf: TokenKind.int 5
    /NodeKind.sign_int
  /NodeKind.add
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.leaf: TokenKind.id a
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.assign
      NodeKind.leaf: TokenKind.id b
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.op_eq =
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id c
    /NodeKind.assign
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.dot
    NodeKind.question
      NodeKind.dot
        NodeKind.question
          NodeKind.dot
            NodeKind.dot
              NodeKind.dot
                NodeKind.question
                  NodeKind.dot
                    NodeKind.leaf: TokenKind.id a
                    NodeKind.leaf: TokenKind.op_dot .
                    NodeKind.leaf: TokenKind.id b
                  /NodeKind.dot
                  NodeKind.leaf: TokenKind.op_question ?
                /NodeKind.question
                NodeKind.leaf: TokenKind.op_dot .
                NodeKind.leaf: TokenKind.id c
              /NodeKind.dot
              NodeKind.leaf: TokenKind.op_dot .
              NodeKind.leaf: TokenKind.id d
            /NodeKind.dot
            NodeKind.leaf: TokenKind.op_dot .
            NodeKind.leaf: TokenKind.id e
          /NodeKind.dot
          NodeKind.leaf: TokenKind.op_question ?
        /NodeKind.question
        NodeKind.leaf: TokenKind.op_dot .
        NodeKind.leaf: TokenKind.id f
      /NodeKind.dot
      NodeKind.leaf: TokenKind.op_question ?
    /NodeKind.question
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.leaf: TokenKind.id g
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.dot
    NodeKind.question
      NodeKind.dot
        NodeKind.frac
          NodeKind.leaf: TokenKind.int 1
          NodeKind.leaf: TokenKind.op_dot .
          NodeKind.leaf: TokenKind.int 5
        /NodeKind.frac
        NodeKind.leaf: TokenKind.op_dot .
        NodeKind.leaf: TokenKind.id c
      /NodeKind.dot
      NodeKind.leaf: TokenKind.op_question ?
    /NodeKind.question
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.leaf: TokenKind.id d
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.dot
    NodeKind.leaf: TokenKind.int 1
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.leaf: TokenKind.int 5
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.frac
    NodeKind.sign_int
      NodeKind.leaf: TokenKind.op_sub -
      NodeKind.leaf: TokenKind.int 1
    /NodeKind.sign_int
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.leaf: TokenKind.int 5
  /NodeKind.frac
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.dot
    NodeKind.dot
      NodeKind.frac
        NodeKind.sign_int
          NodeKind.leaf: TokenKind.op_sub -
          NodeKind.leaf: TokenKind.int 1
        /NodeKind.sign_int
        NodeKind.leaf: TokenKind.op_dot .
        NodeKind.leaf: TokenKind.int 2
      /NodeKind.frac
      NodeKind.leaf: TokenKind.op_dot .
      NodeKind.leaf: TokenKind.id a
    /NodeKind.dot
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.leaf: TokenKind.int 3
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.dot
    NodeKind.dot
      NodeKind.round
        NodeKind.leaf: TokenKind.round_begin (
        NodeKind.block
          NodeKind.frac
            NodeKind.sign_int
              NodeKind.leaf: TokenKind.op_sub -
              NodeKind.leaf: TokenKind.int 1
            /NodeKind.sign_int
            NodeKind.leaf: TokenKind.op_dot .
            NodeKind.leaf: TokenKind.int 2
          /NodeKind.frac
        /NodeKind.block
        NodeKind.leaf: TokenKind.round_end )
      /NodeKind.round
      NodeKind.leaf: TokenKind.op_dot .
      NodeKind.leaf: TokenKind.id a
    /NodeKind.dot
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.leaf: TokenKind.int 3
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.sign
    NodeKind.leaf: TokenKind.op_sub -
    NodeKind.dot
      NodeKind.dot
        NodeKind.dot
          NodeKind.leaf: TokenKind.id b
          NodeKind.leaf: TokenKind.op_dot .
          NodeKind.leaf: TokenKind.id c
        /NodeKind.dot
        NodeKind.leaf: TokenKind.op_dot .
        NodeKind.leaf: TokenKind.id a
      /NodeKind.dot
      NodeKind.leaf: TokenKind.op_dot .
      NodeKind.leaf: TokenKind.int 3
    /NodeKind.dot
  /NodeKind.sign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.dot
    NodeKind.leaf: TokenKind.id a
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.leaf: TokenKind.int 5
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.call
    NodeKind.leaf: TokenKind.id a
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.frac
      NodeKind.leaf: TokenKind.int 0
      NodeKind.leaf: TokenKind.op_dot .
      NodeKind.leaf: TokenKind.int 5
    /NodeKind.frac
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.frac
    NodeKind.leaf: TokenKind.int 5
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.sign_int
      NodeKind.leaf: TokenKind.op_sub -
      NodeKind.leaf: TokenKind.int 1
    /NodeKind.sign_int
  /NodeKind.frac
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.leaf: TokenKind.id things
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.key_blank _
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.int 1
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.int 2
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.string
        NodeKind.leaf: TokenKind.quote_double "
        NodeKind.leaf: TokenKind.string_text hi
        NodeKind.leaf: TokenKind.quote_double "
      /NodeKind.string
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.int 4
    /NodeKind.call
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.assign
    NodeKind.leaf: TokenKind.id things
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.round
        NodeKind.leaf: TokenKind.round_begin (
        NodeKind.block
          NodeKind.call
            NodeKind.leaf: TokenKind.id list
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.key_blank _
          /NodeKind.call
        /NodeKind.block
        NodeKind.leaf: TokenKind.round_end )
      /NodeKind.round
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.int 1
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.int 2
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.string
        NodeKind.leaf: TokenKind.quote_double "
        NodeKind.leaf: TokenKind.string_text hi
        NodeKind.leaf: TokenKind.quote_double "
      /NodeKind.string
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.int 4
    /NodeKind.call
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.list
    NodeKind.call
      NodeKind.leaf: TokenKind.id a
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id b
    /NodeKind.call
    NodeKind.leaf: TokenKind.op_comma ,
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.id c
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id d
    /NodeKind.call
    NodeKind.leaf: TokenKind.op_comma ,
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.id e
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id f
    /NodeKind.call
  /NodeKind.list
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.list
    NodeKind.call
      NodeKind.leaf: TokenKind.id a
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.of
        NodeKind.leaf: TokenKind.key_of of
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.block
          NodeKind.colon
            NodeKind.leaf: TokenKind.id b
            NodeKind.leaf: TokenKind.op_colon :
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id c
          /NodeKind.colon
        /NodeKind.block
      /NodeKind.of
    /NodeKind.call
    NodeKind.leaf: TokenKind.op_comma ,
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.colon
      NodeKind.leaf: TokenKind.id d
      NodeKind.leaf: TokenKind.op_colon :
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id e
    /NodeKind.colon
  /NodeKind.list
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.call
    NodeKind.leaf: TokenKind.id a
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.call
          NodeKind.leaf: TokenKind.key_blank _
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.colon
            NodeKind.leaf: TokenKind.id b
            NodeKind.leaf: TokenKind.op_colon :
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id c
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
          /NodeKind.colon
          NodeKind.colon
            NodeKind.leaf: TokenKind.id d
            NodeKind.leaf: TokenKind.op_colon :
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id e
          /NodeKind.colon
        /NodeKind.call
      /NodeKind.block
    /NodeKind.of
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.call
    NodeKind.leaf: TokenKind.id a
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.colon
      NodeKind.leaf: TokenKind.id b
      NodeKind.leaf: TokenKind.op_colon :
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id c
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
    /NodeKind.colon
    NodeKind.colon
      NodeKind.leaf: TokenKind.id d
      NodeKind.leaf: TokenKind.op_colon :
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id e
    /NodeKind.colon
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.list
    NodeKind.call
      NodeKind.leaf: TokenKind.id a
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.colon
        NodeKind.leaf: TokenKind.id b
        NodeKind.leaf: TokenKind.op_colon :
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id c
      /NodeKind.colon
    /NodeKind.call
    NodeKind.leaf: TokenKind.op_comma ,
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.colon
      NodeKind.leaf: TokenKind.id d
      NodeKind.leaf: TokenKind.op_colon :
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id e
    /NodeKind.colon
  /NodeKind.list
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.list
    NodeKind.colon
      NodeKind.leaf: TokenKind.id a
      NodeKind.leaf: TokenKind.op_colon :
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id b
    /NodeKind.colon
    NodeKind.leaf: TokenKind.op_comma ,
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.colon
      NodeKind.leaf: TokenKind.id c
      NodeKind.leaf: TokenKind.op_colon :
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id d
    /NodeKind.colon
  /NodeKind.list
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.call
    NodeKind.leaf: TokenKind.id a
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.round
      NodeKind.leaf: TokenKind.round_begin (
      NodeKind.block
        NodeKind.leaf: TokenKind.id b
      NodeKind.leaf: TokenKind.round_end )
    /NodeKind.round
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.round
      NodeKind.leaf: TokenKind.round_begin (
      NodeKind.block
        NodeKind.call
          NodeKind.leaf: TokenKind.id c
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id d
        /NodeKind.call
      /NodeKind.block
      NodeKind.leaf: TokenKind.round_end )
    /NodeKind.round
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.fun
    NodeKind.fun_for
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.call
        NodeKind.leaf: TokenKind.id a
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id b
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id c
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.call
    /NodeKind.fun_for
    NodeKind.fun_to
      NodeKind.leaf: TokenKind.key_to to
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.call
          NodeKind.leaf: TokenKind.id d
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id e
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id f
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
        /NodeKind.call
      /NodeKind.block
    /NodeKind.fun_to
    NodeKind.be
      NodeKind.leaf: TokenKind.key_be be
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.add
          NodeKind.add
            NodeKind.leaf: TokenKind.id a
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.op_add +
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id b
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
          /NodeKind.add
          NodeKind.leaf: TokenKind.op_add +
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id c
        /NodeKind.add
      /NodeKind.block
    /NodeKind.be
  /NodeKind.fun
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.call
    NodeKind.round
      NodeKind.leaf: TokenKind.round_begin (
      NodeKind.block
        NodeKind.leaf: TokenKind.id a
      NodeKind.leaf: TokenKind.round_end )
    /NodeKind.round
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.round
      NodeKind.leaf: TokenKind.round_begin (
      NodeKind.block
        NodeKind.leaf: TokenKind.id b
      NodeKind.leaf: TokenKind.round_end )
    /NodeKind.round
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.round
    NodeKind.leaf: TokenKind.round_begin (
    NodeKind.block
      NodeKind.call
        NodeKind.leaf: TokenKind.op_dot .
        NodeKind.leaf: TokenKind.id cat
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.int 1
      /NodeKind.call
    /NodeKind.block
    NodeKind.leaf: TokenKind.round_end )
  /NodeKind.round
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.comment # These two should be equivalent
    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.dot
    NodeKind.leaf: TokenKind.id a
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.round
      NodeKind.leaf: TokenKind.round_begin (
      NodeKind.block
        NodeKind.call
          NodeKind.round
            NodeKind.leaf: TokenKind.round_begin (
            NodeKind.block
              NodeKind.call
                NodeKind.leaf: TokenKind.id b
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id c
              /NodeKind.call
            /NodeKind.block
            NodeKind.leaf: TokenKind.round_end )
          /NodeKind.round
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.round
            NodeKind.leaf: TokenKind.round_begin (
            NodeKind.block
              NodeKind.call
                NodeKind.leaf: TokenKind.id d
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id e
              /NodeKind.call
            /NodeKind.block
            NodeKind.leaf: TokenKind.round_end )
          /NodeKind.round
        /NodeKind.call
      /NodeKind.block
      NodeKind.leaf: TokenKind.round_end )
    /NodeKind.round
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.round
    NodeKind.leaf: TokenKind.round_begin (
    NodeKind.block
      NodeKind.call
        NodeKind.leaf: TokenKind.id d
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.round
          NodeKind.leaf: TokenKind.round_begin (
          NodeKind.block
            NodeKind.call
              NodeKind.leaf: TokenKind.id b
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.id a
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.id c
            /NodeKind.call
          /NodeKind.block
          NodeKind.leaf: TokenKind.round_end )
        /NodeKind.round
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id e
      /NodeKind.call
    /NodeKind.block
    NodeKind.leaf: TokenKind.round_end )
  /NodeKind.round
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.list
    NodeKind.leaf: TokenKind.id a
    NodeKind.leaf: TokenKind.op_comma ,
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.id b
    NodeKind.leaf: TokenKind.op_comma ,
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.id c
  /NodeKind.list
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.comment # All the same.
    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.round
    NodeKind.leaf: TokenKind.round_begin (
    NodeKind.block
      NodeKind.leaf: TokenKind.id boo
      NodeKind.space
        NodeKind.leaf: TokenKind.vspace 

        NodeKind.leaf: TokenKind.hspace   
      /NodeKind.space
      NodeKind.leaf: TokenKind.id baa
      NodeKind.space
        NodeKind.leaf: TokenKind.vspace 

        NodeKind.leaf: TokenKind.hspace   
      /NodeKind.space
      NodeKind.leaf: TokenKind.id bee
      NodeKind.space
        NodeKind.leaf: TokenKind.vspace 

    /NodeKind.block
    NodeKind.leaf: TokenKind.round_end )
  /NodeKind.round
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.round
    NodeKind.leaf: TokenKind.round_begin (
    NodeKind.block
      NodeKind.call
        NodeKind.leaf: TokenKind.id boo
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id baa
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id bee
      /NodeKind.call
    /NodeKind.block
    NodeKind.leaf: TokenKind.round_end )
  /NodeKind.round
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.round
    NodeKind.leaf: TokenKind.round_begin (
    NodeKind.block
      NodeKind.space
        NodeKind.leaf: TokenKind.vspace 

        NodeKind.leaf: TokenKind.hspace   
      /NodeKind.space
      NodeKind.leaf: TokenKind.id boo
      NodeKind.space
        NodeKind.leaf: TokenKind.vspace 

        NodeKind.leaf: TokenKind.hspace   
      /NodeKind.space
      NodeKind.leaf: TokenKind.id baa
      NodeKind.space
        NodeKind.leaf: TokenKind.vspace 

        NodeKind.leaf: TokenKind.hspace   
      /NodeKind.space
      NodeKind.leaf: TokenKind.id bee
      NodeKind.space
        NodeKind.leaf: TokenKind.vspace 

    /NodeKind.block
    NodeKind.leaf: TokenKind.round_end )
  /NodeKind.round
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.comment # All the same.
    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.call
    NodeKind.leaf: TokenKind.id boo
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.round
      NodeKind.leaf: TokenKind.round_begin (
      NodeKind.block
        NodeKind.call
          NodeKind.leaf: TokenKind.id baa
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id bee
        /NodeKind.call
      /NodeKind.block
      NodeKind.leaf: TokenKind.round_end )
    /NodeKind.round
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.call
    NodeKind.leaf: TokenKind.id boo
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.block
        NodeKind.call
          NodeKind.leaf: TokenKind.id baa
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id bee
        /NodeKind.call
      /NodeKind.block
    /NodeKind.of
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.round
    NodeKind.leaf: TokenKind.round_begin (
    NodeKind.block
      NodeKind.call
        NodeKind.leaf: TokenKind.id boo
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.round
          NodeKind.leaf: TokenKind.round_begin (
          NodeKind.block
            NodeKind.call
              NodeKind.leaf: TokenKind.id baa
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.id bee
            /NodeKind.call
          /NodeKind.block
          NodeKind.leaf: TokenKind.round_end )
        /NodeKind.round
      /NodeKind.call
    /NodeKind.block
    NodeKind.leaf: TokenKind.round_end )
  /NodeKind.round
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.round
    NodeKind.leaf: TokenKind.round_begin (
    NodeKind.block
      NodeKind.space
        NodeKind.leaf: TokenKind.vspace 

        NodeKind.leaf: TokenKind.hspace   
      /NodeKind.space
      NodeKind.leaf: TokenKind.id boo
      NodeKind.space
        NodeKind.leaf: TokenKind.vspace 

        NodeKind.leaf: TokenKind.hspace   
      /NodeKind.space
      NodeKind.call
        NodeKind.leaf: TokenKind.id baa
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id bee
      /NodeKind.call
      NodeKind.space
        NodeKind.leaf: TokenKind.vspace 

    /NodeKind.block
    NodeKind.leaf: TokenKind.round_end )
  /NodeKind.round
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.call
    NodeKind.leaf: TokenKind.int 5
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.id things
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.dot
    NodeKind.leaf: TokenKind.id a
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      NodeKind.end
        NodeKind.leaf: TokenKind.key_end end
    /NodeKind.of
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.dot
    NodeKind.leaf: TokenKind.id wild
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.list
          NodeKind.leaf: TokenKind.int 1
          NodeKind.leaf: TokenKind.op_comma ,
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.int 2
          NodeKind.leaf: TokenKind.op_comma ,
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.int 3
        /NodeKind.list
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.leaf: TokenKind.id length
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
      NodeKind.end
        NodeKind.leaf: TokenKind.key_end end
    /NodeKind.of
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.call
    NodeKind.leaf: TokenKind.id wild
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.list
          NodeKind.leaf: TokenKind.int 1
          NodeKind.leaf: TokenKind.op_comma ,
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.int 2
          NodeKind.leaf: TokenKind.op_comma ,
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.int 3
        /NodeKind.list
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.leaf: TokenKind.id length
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
      NodeKind.end
        NodeKind.leaf: TokenKind.key_end end
    /NodeKind.of
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.dot
    NodeKind.leaf: TokenKind.id wilder
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.call
          NodeKind.leaf: TokenKind.id a
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id b
        /NodeKind.call
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
      NodeKind.end
        NodeKind.leaf: TokenKind.key_end end
    /NodeKind.of
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.call
    NodeKind.leaf: TokenKind.id wildest
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.dot
          NodeKind.leaf: TokenKind.id wilder
          NodeKind.leaf: TokenKind.op_dot .
          NodeKind.of
            NodeKind.leaf: TokenKind.key_of of
            NodeKind.block
              NodeKind.space
                NodeKind.leaf: TokenKind.vspace 

                NodeKind.leaf: TokenKind.hspace     
              /NodeKind.space
              NodeKind.call
                NodeKind.leaf: TokenKind.id a
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id b
              /NodeKind.call
              NodeKind.space
                NodeKind.leaf: TokenKind.vspace 

                NodeKind.leaf: TokenKind.hspace   
              /NodeKind.space
            /NodeKind.block
            NodeKind.end
              NodeKind.leaf: TokenKind.key_end end
          /NodeKind.of
        /NodeKind.dot
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.leaf: TokenKind.id c
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
      NodeKind.end
        NodeKind.leaf: TokenKind.key_end end
    /NodeKind.of
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.dot
    NodeKind.leaf: TokenKind.id world
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
          NodeKind.leaf: TokenKind.comment # Of or splat inside .of is degenerate. Probably who cares on semantics, and just validate against it.
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.of
          NodeKind.leaf: TokenKind.key_of of
          NodeKind.block
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

              NodeKind.leaf: TokenKind.hspace     
            /NodeKind.space
            NodeKind.call
              NodeKind.leaf: TokenKind.id hi
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.id there
            /NodeKind.call
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

              NodeKind.leaf: TokenKind.hspace     
            /NodeKind.space
            NodeKind.leaf: TokenKind.id kids
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

              NodeKind.leaf: TokenKind.hspace   
            /NodeKind.space
          /NodeKind.block
          NodeKind.end
            NodeKind.leaf: TokenKind.key_end end
        /NodeKind.of
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.leaf: TokenKind.id more
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
      NodeKind.end
        NodeKind.leaf: TokenKind.key_end end
    /NodeKind.of
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.call
    NodeKind.leaf: TokenKind.id more
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.round
          NodeKind.leaf: TokenKind.round_begin (
          NodeKind.block
            NodeKind.leaf: TokenKind.id hi
          NodeKind.leaf: TokenKind.round_end )
        /NodeKind.round
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.leaf: TokenKind.id there
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
      NodeKind.end
        NodeKind.leaf: TokenKind.key_end end
    /NodeKind.of
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.dot
    NodeKind.leaf: TokenKind.id what
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.dot
          NodeKind.leaf: TokenKind.id that
          NodeKind.leaf: TokenKind.op_dot .
          NodeKind.of
            NodeKind.leaf: TokenKind.key_of of
            NodeKind.block
              NodeKind.space
                NodeKind.leaf: TokenKind.vspace 

                NodeKind.leaf: TokenKind.hspace     
              /NodeKind.space
              NodeKind.call
                NodeKind.leaf: TokenKind.id a
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id b
              /NodeKind.call
              NodeKind.space
                NodeKind.leaf: TokenKind.vspace 

                NodeKind.leaf: TokenKind.hspace     
              /NodeKind.space
              NodeKind.call
                NodeKind.leaf: TokenKind.id c
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id d
              /NodeKind.call
              NodeKind.space
                NodeKind.leaf: TokenKind.vspace 

                NodeKind.leaf: TokenKind.hspace   
              /NodeKind.space
            /NodeKind.block
            NodeKind.end
              NodeKind.leaf: TokenKind.key_end end
          /NodeKind.of
        /NodeKind.dot
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.call
          NodeKind.leaf: TokenKind.id e
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.id f
        /NodeKind.call
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.leaf: TokenKind.id g
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
      NodeKind.end
        NodeKind.leaf: TokenKind.key_end end
    /NodeKind.of
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.dot
    NodeKind.leaf: TokenKind.id persons
    NodeKind.leaf: TokenKind.op_dot .
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.call
          NodeKind.leaf: TokenKind.id filter
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.be
            NodeKind.leaf: TokenKind.key_be be
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.block
              NodeKind.compare
                NodeKind.dot
                  NodeKind.leaf: TokenKind.id it
                  NodeKind.leaf: TokenKind.op_dot .
                  NodeKind.leaf: TokenKind.id age
                /NodeKind.dot
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.op_ge >=
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.int 18
              /NodeKind.compare
            /NodeKind.block
          /NodeKind.be
        /NodeKind.call
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.call
          NodeKind.leaf: TokenKind.id map
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.be
            NodeKind.leaf: TokenKind.key_be be
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.block
              NodeKind.dot
                NodeKind.leaf: TokenKind.id it
                NodeKind.leaf: TokenKind.op_dot .
                NodeKind.leaf: TokenKind.id name
              /NodeKind.dot
            /NodeKind.block
          /NodeKind.be
        /NodeKind.call
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
      NodeKind.end
        NodeKind.leaf: TokenKind.key_end end
    /NodeKind.of
  /NodeKind.dot
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign_to
    NodeKind.assign_to
      NodeKind.assign_to
        NodeKind.leaf: TokenKind.id a
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.op_eqto =>
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id b
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      /NodeKind.assign_to
      NodeKind.leaf: TokenKind.op_eqto =>
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.round
        NodeKind.leaf: TokenKind.round_begin (
        NodeKind.block
          NodeKind.assign
            NodeKind.leaf: TokenKind.id c
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.op_eq =
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.assign
              NodeKind.leaf: TokenKind.id d
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.op_eq =
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.id e
            /NodeKind.assign
          /NodeKind.assign
        /NodeKind.block
        NodeKind.leaf: TokenKind.round_end )
      /NodeKind.round
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
    /NodeKind.assign_to
    NodeKind.leaf: TokenKind.op_eqto =>
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.id d
  /NodeKind.assign_to
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.add
    NodeKind.mul
      NodeKind.leaf: TokenKind.id x
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.op_mul *
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.round
        NodeKind.leaf: TokenKind.round_begin (
        NodeKind.block
          NodeKind.add
            NodeKind.leaf: TokenKind.id y
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.op_add +
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id z
          /NodeKind.add
        /NodeKind.block
        NodeKind.leaf: TokenKind.round_end )
      /NodeKind.round
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
    /NodeKind.mul
    NodeKind.leaf: TokenKind.op_add +
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.mul
      NodeKind.leaf: TokenKind.id w
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.op_div /
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id v
    /NodeKind.mul
  /NodeKind.add
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.leaf: TokenKind.id text
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.round
      NodeKind.leaf: TokenKind.round_begin (
      NodeKind.block
        NodeKind.leaf: TokenKind.id cat
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.string
          NodeKind.leaf: TokenKind.quote_double "
          NodeKind.leaf: TokenKind.string_text I once met a fish from Chicago
        /NodeKind.string
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
          NodeKind.leaf: TokenKind.comment # Comment.
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.string
          NodeKind.leaf: TokenKind.quote_double "
          NodeKind.leaf: TokenKind.string_text Who I don't know what happens next, y'all
          NodeKind.leaf: TokenKind.quote_double "
        /NodeKind.string
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
          NodeKind.leaf: TokenKind.comment # "
        /NodeKind.space
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

      /NodeKind.block
      NodeKind.leaf: TokenKind.round_end )
    /NodeKind.round
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.leaf: TokenKind.id text
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.id cat
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.of
        NodeKind.leaf: TokenKind.key_of of
        NodeKind.block
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.leaf: TokenKind.round_end )
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.comment # Extra paren for fun.
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.string
            NodeKind.leaf: TokenKind.quote_double "
            NodeKind.leaf: TokenKind.string_text I once met a fish from Chicago
          /NodeKind.string
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
            NodeKind.leaf: TokenKind.comment # Comment.
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.string
            NodeKind.leaf: TokenKind.quote_double "
            NodeKind.leaf: TokenKind.string_text Who I don't know what happens next, y'all
          /NodeKind.string
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
            NodeKind.leaf: TokenKind.comment # More comment.
            NodeKind.leaf: TokenKind.vspace 

          /NodeKind.space
        /NodeKind.block
        NodeKind.end
          NodeKind.leaf: TokenKind.key_end end
      /NodeKind.of
    /NodeKind.call
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.leaf: TokenKind.id text
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.round
      NodeKind.leaf: TokenKind.round_begin (
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.string
          NodeKind.leaf: TokenKind.quote_double "
          NodeKind.leaf: TokenKind.string_text I once met a fish from Chicago
        /NodeKind.string
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
          NodeKind.leaf: TokenKind.comment # Comment.
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.string
          NodeKind.leaf: TokenKind.quote_double "
          NodeKind.leaf: TokenKind.string_text Who I don't know what happens next, y'all
        /NodeKind.string
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
          NodeKind.leaf: TokenKind.comment # More comment.
          NodeKind.leaf: TokenKind.vspace 

        /NodeKind.space
      /NodeKind.block
      NodeKind.leaf: TokenKind.round_end )
    /NodeKind.round
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.leaf: TokenKind.id text
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.of
      NodeKind.leaf: TokenKind.key_of of
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.string
          NodeKind.leaf: TokenKind.quote_double "
          NodeKind.leaf: TokenKind.string_text I once met a fish from Chicago
        /NodeKind.string
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
          NodeKind.leaf: TokenKind.comment # Comment.
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
        /NodeKind.space
        NodeKind.string
          NodeKind.leaf: TokenKind.quote_double "
          NodeKind.leaf: TokenKind.string_text Who I don't know what happens next, y'all
        /NodeKind.string
        NodeKind.space
          NodeKind.leaf: TokenKind.vspace 

          NodeKind.leaf: TokenKind.hspace   
          NodeKind.leaf: TokenKind.comment # More comment.
          NodeKind.leaf: TokenKind.vspace 

        /NodeKind.space
      /NodeKind.block
      NodeKind.end
        NodeKind.leaf: TokenKind.key_end end
    /NodeKind.of
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.leaf: TokenKind.id text
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.vspace 

      NodeKind.leaf: TokenKind.hspace   
    /NodeKind.space
    NodeKind.string
      NodeKind.leaf: TokenKind.quote_double "
      NodeKind.leaf: TokenKind.string_text I once met a fish from Chicago
    /NodeKind.string
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.hspace   
    NodeKind.leaf: TokenKind.comment # Comment
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.hspace   
  /NodeKind.space
  NodeKind.string
    NodeKind.leaf: TokenKind.quote_double "
    NodeKind.leaf: TokenKind.string_text Who I don't know what happens next, y'all
    NodeKind.leaf: TokenKind.quote_double "
  /NodeKind.string
  NodeKind.space
    NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.comment # "
  /NodeKind.space
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.leaf: TokenKind.id text
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.vspace 

      NodeKind.leaf: TokenKind.hspace   
    /NodeKind.space
    NodeKind.string
      NodeKind.leaf: TokenKind.quote_double "
      NodeKind.leaf: TokenKind.string_text I once met a fish from Chicago
    /NodeKind.string
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.hspace   
    NodeKind.leaf: TokenKind.comment # Comment
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.hspace   
  /NodeKind.space
  NodeKind.string
    NodeKind.leaf: TokenKind.quote_double "
    NodeKind.leaf: TokenKind.string_text Who I don't know what happens next, y'all
  /NodeKind.string
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.hspace   
  /NodeKind.space
  NodeKind.string
    NodeKind.leaf: TokenKind.quote_double "
    NodeKind.leaf: TokenKind.quote_double "
  /NodeKind.string
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.comment # All of these are equivalent when normed.
    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.string
    NodeKind.leaf: TokenKind.quote_double "
    NodeKind.leaf: TokenKind.string_text hi 
    NodeKind.escape
      NodeKind.leaf: TokenKind.escape_begin \(
      NodeKind.block
        NodeKind.leaf: TokenKind.id there
      NodeKind.leaf: TokenKind.escape_end )
    /NodeKind.escape
    NodeKind.leaf: TokenKind.string_text  yall
    NodeKind.leaf: TokenKind.quote_double "
  /NodeKind.string
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.list
    NodeKind.string
      NodeKind.leaf: TokenKind.quote_double "
      NodeKind.leaf: TokenKind.string_text hi 
      NodeKind.leaf: TokenKind.quote_double "
    /NodeKind.string
    NodeKind.leaf: TokenKind.op_comma ,
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.id there
    NodeKind.leaf: TokenKind.op_comma ,
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.string
      NodeKind.leaf: TokenKind.quote_double "
      NodeKind.leaf: TokenKind.string_text  yall
      NodeKind.leaf: TokenKind.quote_double "
    /NodeKind.string
  /NodeKind.list
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.call
    NodeKind.leaf: TokenKind.key_blank _
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.string
      NodeKind.leaf: TokenKind.quote_double "
      NodeKind.leaf: TokenKind.string_text hi 
      NodeKind.leaf: TokenKind.quote_double "
    /NodeKind.string
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.id there
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.string
      NodeKind.leaf: TokenKind.quote_double "
      NodeKind.leaf: TokenKind.string_text  yall
      NodeKind.leaf: TokenKind.quote_double "
    /NodeKind.string
  /NodeKind.call
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.call
      NodeKind.leaf: TokenKind.id less-than
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.round
        NodeKind.leaf: TokenKind.round_begin (
        NodeKind.block
          NodeKind.fun
            NodeKind.fun_for
              NodeKind.leaf: TokenKind.key_for for
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.call
                NodeKind.round
                  NodeKind.leaf: TokenKind.round_begin (
                  NodeKind.block
                    NodeKind.as
                      NodeKind.leaf: TokenKind.id a
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.leaf: TokenKind.key_as as
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.leaf: TokenKind.id int
                    /NodeKind.as
                  /NodeKind.block
                  NodeKind.leaf: TokenKind.round_end )
                /NodeKind.round
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.round
                  NodeKind.leaf: TokenKind.round_begin (
                  NodeKind.block
                    NodeKind.as
                      NodeKind.leaf: TokenKind.id b
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.leaf: TokenKind.key_as as
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.leaf: TokenKind.id int
                    /NodeKind.as
                  /NodeKind.block
                  NodeKind.leaf: TokenKind.round_end )
                /NodeKind.round
              /NodeKind.call
            /NodeKind.fun_for
          /NodeKind.fun
        /NodeKind.block
        NodeKind.leaf: TokenKind.round_end )
      /NodeKind.round
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
    /NodeKind.call
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.compare
      NodeKind.leaf: TokenKind.id a
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.op_lt <
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id b
    /NodeKind.compare
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.assign
    NodeKind.call
      NodeKind.leaf: TokenKind.id less-than
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.of
        NodeKind.leaf: TokenKind.key_of of
        NodeKind.block
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.fun
            NodeKind.fun_for
              NodeKind.leaf: TokenKind.key_for for
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.call
                NodeKind.round
                  NodeKind.leaf: TokenKind.round_begin (
                  NodeKind.block
                    NodeKind.as
                      NodeKind.leaf: TokenKind.id a
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.leaf: TokenKind.key_as as
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.leaf: TokenKind.id int
                    /NodeKind.as
                  /NodeKind.block
                  NodeKind.leaf: TokenKind.round_end )
                /NodeKind.round
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.round
                  NodeKind.leaf: TokenKind.round_begin (
                  NodeKind.block
                    NodeKind.as
                      NodeKind.leaf: TokenKind.id b
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.leaf: TokenKind.key_as as
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.leaf: TokenKind.id int
                    /NodeKind.as
                  /NodeKind.block
                  NodeKind.leaf: TokenKind.round_end )
                /NodeKind.round
              /NodeKind.call
            /NodeKind.fun_for
          /NodeKind.fun
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

        /NodeKind.block
        NodeKind.end
          NodeKind.leaf: TokenKind.key_end end
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
        /NodeKind.end
      /NodeKind.of
    /NodeKind.call
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.compare
      NodeKind.leaf: TokenKind.id a
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.op_lt <
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id b
    /NodeKind.compare
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.assign
    NodeKind.call
      NodeKind.leaf: TokenKind.id less-than
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.of
        NodeKind.leaf: TokenKind.key_of of
        NodeKind.block
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.fun
            NodeKind.fun_for
              NodeKind.leaf: TokenKind.key_for for
              NodeKind.block
                NodeKind.space
                  NodeKind.leaf: TokenKind.vspace 

                  NodeKind.leaf: TokenKind.hspace     
                /NodeKind.space
                NodeKind.as
                  NodeKind.leaf: TokenKind.id a
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.key_as as
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.id int
                /NodeKind.as
                NodeKind.space
                  NodeKind.leaf: TokenKind.vspace 

                  NodeKind.leaf: TokenKind.hspace     
                /NodeKind.space
                NodeKind.as
                  NodeKind.leaf: TokenKind.id b
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.key_as as
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.id int
                /NodeKind.as
                NodeKind.space
                  NodeKind.leaf: TokenKind.vspace 

                  NodeKind.leaf: TokenKind.hspace   
                /NodeKind.space
              /NodeKind.block
              NodeKind.end
                NodeKind.leaf: TokenKind.key_end end
            /NodeKind.fun_for
          /NodeKind.fun
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

        /NodeKind.block
        NodeKind.end
          NodeKind.leaf: TokenKind.key_end end
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
        /NodeKind.end
      /NodeKind.of
    /NodeKind.call
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.compare
      NodeKind.leaf: TokenKind.id a
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.op_lt <
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id b
    /NodeKind.compare
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.leaf: TokenKind.id hi
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.leaf: TokenKind.round_end )
  NodeKind.space
    NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.comment # Extra paren for fun.
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.string
    NodeKind.leaf: TokenKind.quote_double "
    NodeKind.escape
      NodeKind.leaf: TokenKind.escape_begin \(
      NodeKind.block
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace    
      NodeKind.leaf: TokenKind.escape_end )
    /NodeKind.escape
    NodeKind.leaf: TokenKind.quote_double "
  /NodeKind.string
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.string
    NodeKind.leaf: TokenKind.quote_double "
    NodeKind.escape
      NodeKind.leaf: TokenKind.escape_begin \(
      NodeKind.leaf: TokenKind.escape_end )
    /NodeKind.escape
    NodeKind.escape
      NodeKind.leaf: TokenKind.escape_begin \(
      NodeKind.leaf: TokenKind.escape_end )
    /NodeKind.escape
    NodeKind.leaf: TokenKind.string_text hi
    NodeKind.escape
      NodeKind.leaf: TokenKind.escape_begin \(
      NodeKind.leaf: TokenKind.escape_end )
    /NodeKind.escape
    NodeKind.escape
      NodeKind.leaf: TokenKind.escape_begin \(
      NodeKind.leaf: TokenKind.escape_end )
    /NodeKind.escape
    NodeKind.leaf: TokenKind.string_text there
    NodeKind.leaf: TokenKind.quote_double "
  /NodeKind.string
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

/NodeKind.block
Pool storage: 4096 653 (1132 -> 1785)
Parsed size: 2568
Token size: 8 node size: 12 1
