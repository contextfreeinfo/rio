NodeKind.block
  NodeKind.assign_to
    NodeKind.call
      NodeKind.leaf: TokenKind.key_use use
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.string
        NodeKind.leaf: TokenKind.string_begin_double "
        NodeKind.leaf: TokenKind.string_text c
        NodeKind.leaf: TokenKind.string_end "
      /NodeKind.string
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
    /NodeKind.call
    NodeKind.leaf: TokenKind.op_eqto =>
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_spread ..
  /NodeKind.assign_to
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.leaf: TokenKind.id main
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.round
        NodeKind.leaf: TokenKind.round_begin (
        NodeKind.leaf: TokenKind.round_end )
      /NodeKind.round
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id with
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id printf
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.be
        NodeKind.leaf: TokenKind.key_be be
        NodeKind.block
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.call
            NodeKind.leaf: TokenKind.id each
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.round
              NodeKind.leaf: TokenKind.round_begin (
              NodeKind.block
                NodeKind.call
                  NodeKind.dot
                    NodeKind.leaf: TokenKind.int 0
                    NodeKind.leaf: TokenKind.op_dot .
                    NodeKind.leaf: TokenKind.id thru
                  /NodeKind.dot
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.int 9
                /NodeKind.call
              /NodeKind.block
              NodeKind.leaf: TokenKind.round_end )
            /NodeKind.round
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.key_for for
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.leaf: TokenKind.id n
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.be
              NodeKind.leaf: TokenKind.key_be be
              NodeKind.block
                NodeKind.space
                  NodeKind.leaf: TokenKind.vspace 

                  NodeKind.leaf: TokenKind.hspace     
                /NodeKind.space
                NodeKind.call
                  NodeKind.leaf: TokenKind.id void
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.of
                    NodeKind.leaf: TokenKind.key_of of
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.call
                      NodeKind.leaf: TokenKind.id printf
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.string
                        NodeKind.leaf: TokenKind.string_begin_double "
                        NodeKind.leaf: TokenKind.string_text fib(%d) = %d
                        NodeKind.leaf: TokenKind.escape \n
                        NodeKind.leaf: TokenKind.string_end "
                      /NodeKind.string
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.leaf: TokenKind.id n
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.round
                        NodeKind.leaf: TokenKind.round_begin (
                        NodeKind.block
                          NodeKind.call
                            NodeKind.leaf: TokenKind.id fib
                            NodeKind.space
                              NodeKind.leaf: TokenKind.hspace  
                            NodeKind.leaf: TokenKind.id n
                          /NodeKind.call
                        /NodeKind.block
                        NodeKind.leaf: TokenKind.round_end )
                      /NodeKind.round
                    /NodeKind.call
                  /NodeKind.of
                /NodeKind.call
                NodeKind.space
                  NodeKind.leaf: TokenKind.vspace 

                  NodeKind.leaf: TokenKind.hspace   
                /NodeKind.space
              /NodeKind.block
              NodeKind.end
                NodeKind.leaf: TokenKind.key_end end
            /NodeKind.be
          /NodeKind.call
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

        /NodeKind.block
        NodeKind.end
          NodeKind.leaf: TokenKind.key_end end
      /NodeKind.be
    /NodeKind.call
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  /NodeKind.space
  NodeKind.assign
    NodeKind.call
      NodeKind.leaf: TokenKind.id fib
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id pub
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
    /NodeKind.call
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.key_for for
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id n
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.key_as as
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id int
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.key_to to
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id int
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.be
        NodeKind.leaf: TokenKind.key_be be
        NodeKind.block
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

            NodeKind.leaf: TokenKind.hspace   
          /NodeKind.space
          NodeKind.call
            NodeKind.leaf: TokenKind.key_case case
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.of
              NodeKind.leaf: TokenKind.key_of of
              NodeKind.block
                NodeKind.space
                  NodeKind.leaf: TokenKind.vspace 

                  NodeKind.leaf: TokenKind.hspace     
                /NodeKind.space
                NodeKind.assign
                  NodeKind.call
                    NodeKind.leaf: TokenKind.id n
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.leaf: TokenKind.other <
                  /NodeKind.call
                  NodeKind.leaf: TokenKind.op_eq =
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.call
                    NodeKind.leaf: TokenKind.int 0
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.be
                      NodeKind.leaf: TokenKind.key_be be
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.leaf: TokenKind.int 0
                    /NodeKind.be
                  /NodeKind.call
                /NodeKind.assign
                NodeKind.space
                  NodeKind.leaf: TokenKind.vspace 

                  NodeKind.leaf: TokenKind.hspace     
                /NodeKind.space
                NodeKind.call
                  NodeKind.leaf: TokenKind.id n
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.op_eqeq ==
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.int 1
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.be
                    NodeKind.leaf: TokenKind.key_be be
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.leaf: TokenKind.int 1
                  /NodeKind.be
                /NodeKind.call
                NodeKind.space
                  NodeKind.leaf: TokenKind.vspace 

                  NodeKind.leaf: TokenKind.hspace     
                /NodeKind.space
                NodeKind.call
                  NodeKind.leaf: TokenKind.key_else else
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.be
                    NodeKind.leaf: TokenKind.key_be be
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.call
                      NodeKind.leaf: TokenKind.id vouch
                      NodeKind.space
                        NodeKind.leaf: TokenKind.hspace  
                      NodeKind.of
                        NodeKind.leaf: TokenKind.key_of of
                        NodeKind.space
                          NodeKind.leaf: TokenKind.hspace  
                        NodeKind.call
                          NodeKind.leaf: TokenKind.id fib
                          NodeKind.space
                            NodeKind.leaf: TokenKind.hspace  
                          NodeKind.round
                            NodeKind.leaf: TokenKind.round_begin (
                            NodeKind.block
                              NodeKind.call
                                NodeKind.leaf: TokenKind.id n
                                NodeKind.space
                                  NodeKind.leaf: TokenKind.hspace  
                                NodeKind.leaf: TokenKind.other -
                                NodeKind.space
                                  NodeKind.leaf: TokenKind.hspace  
                                NodeKind.leaf: TokenKind.int 2
                              /NodeKind.call
                            /NodeKind.block
                            NodeKind.leaf: TokenKind.round_end )
                          /NodeKind.round
                          NodeKind.space
                            NodeKind.leaf: TokenKind.hspace  
                          NodeKind.leaf: TokenKind.other +
                          NodeKind.space
                            NodeKind.leaf: TokenKind.hspace  
                          NodeKind.leaf: TokenKind.id fib
                          NodeKind.space
                            NodeKind.leaf: TokenKind.hspace  
                          NodeKind.round
                            NodeKind.leaf: TokenKind.round_begin (
                            NodeKind.block
                              NodeKind.call
                                NodeKind.leaf: TokenKind.id n
                                NodeKind.space
                                  NodeKind.leaf: TokenKind.hspace  
                                NodeKind.leaf: TokenKind.other -
                                NodeKind.space
                                  NodeKind.leaf: TokenKind.hspace  
                                NodeKind.leaf: TokenKind.int 1
                              /NodeKind.call
                            /NodeKind.block
                            NodeKind.leaf: TokenKind.round_end )
                          /NodeKind.round
                        /NodeKind.call
                      /NodeKind.of
                    /NodeKind.call
                  /NodeKind.be
                /NodeKind.call
                NodeKind.space
                  NodeKind.leaf: TokenKind.vspace 

                  NodeKind.leaf: TokenKind.hspace   
                /NodeKind.space
              /NodeKind.block
              NodeKind.end
                NodeKind.leaf: TokenKind.key_end end
            /NodeKind.of
          /NodeKind.call
          NodeKind.space
            NodeKind.leaf: TokenKind.vspace 

        /NodeKind.block
        NodeKind.end
          NodeKind.leaf: TokenKind.key_end end
      /NodeKind.be
    /NodeKind.call
  /NodeKind.assign
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

/NodeKind.block
Intern storage: 4096 107
Tree size: 268
Token size: 8 node size: 16 1
