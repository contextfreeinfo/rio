NodeKind.block
  NodeKind.block
    NodeKind.assign_to
      NodeKind.call
        NodeKind.leaf: TokenKind.key_use use
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.string
          NodeKind.leaf: TokenKind.string_begin_double "
          NodeKind.leaf: TokenKind.string_text c
          NodeKind.leaf: TokenKind.string_end "
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.op_eqto =>
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.op_spread ..
    NodeKind.space
      NodeKind.leaf: TokenKind.vspace 

      NodeKind.leaf: TokenKind.vspace 

    NodeKind.assign
      NodeKind.leaf: TokenKind.id main
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.op_eq =
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.call
        NodeKind.leaf: TokenKind.id with
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id printf
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.be
          NodeKind.leaf: TokenKind.key_be be
          NodeKind.block
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

              NodeKind.leaf: TokenKind.hspace   
            NodeKind.call
              NodeKind.leaf: TokenKind.id each
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.round_begin (
              NodeKind.leaf: TokenKind.id range
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.int 0
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.int 9
              NodeKind.leaf: TokenKind.round_end )
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.key_for for
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.id n
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.be
                NodeKind.leaf: TokenKind.key_be be
                NodeKind.block
                  NodeKind.space
                    NodeKind.leaf: TokenKind.vspace 

                    NodeKind.leaf: TokenKind.hspace     
                  NodeKind.call
                    NodeKind.leaf: TokenKind.id void
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.leaf: TokenKind.id of
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.leaf: TokenKind.id printf
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.string
                      NodeKind.leaf: TokenKind.string_begin_double "
                      NodeKind.leaf: TokenKind.string_text fib(%d) = %d
                      NodeKind.leaf: TokenKind.escape \n
                      NodeKind.leaf: TokenKind.string_end "
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.leaf: TokenKind.id n
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.leaf: TokenKind.round_begin (
                    NodeKind.leaf: TokenKind.id fib
                    NodeKind.space
                      NodeKind.leaf: TokenKind.hspace  
                    NodeKind.leaf: TokenKind.id n
                    NodeKind.leaf: TokenKind.round_end )
                  NodeKind.space
                    NodeKind.leaf: TokenKind.vspace 

                    NodeKind.leaf: TokenKind.hspace   
                NodeKind.end
                  NodeKind.leaf: TokenKind.key_end end
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

          NodeKind.end
            NodeKind.leaf: TokenKind.key_end end
    NodeKind.space
      NodeKind.leaf: TokenKind.vspace 

      NodeKind.leaf: TokenKind.vspace 

    NodeKind.assign
      NodeKind.call
        NodeKind.leaf: TokenKind.id fib
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id pub
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.op_eq =
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.call
        NodeKind.leaf: TokenKind.key_for for
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id n
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.key_as as
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id int
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.key_to to
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id int
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.be
          NodeKind.leaf: TokenKind.key_be be
          NodeKind.block
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

              NodeKind.leaf: TokenKind.hspace   
            NodeKind.leaf: TokenKind.id when
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

              NodeKind.leaf: TokenKind.hspace     
            NodeKind.assign
              NodeKind.call
                NodeKind.leaf: TokenKind.key_case case
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.id n
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.other <
              NodeKind.leaf: TokenKind.op_eq =
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.call
                NodeKind.leaf: TokenKind.int 0
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.be
                  NodeKind.leaf: TokenKind.key_be be
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.int 0
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

              NodeKind.leaf: TokenKind.hspace     
            NodeKind.call
              NodeKind.leaf: TokenKind.key_case case
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.id n
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.op_eqeq ==
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.int 1
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.be
                NodeKind.leaf: TokenKind.key_be be
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.leaf: TokenKind.int 1
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

              NodeKind.leaf: TokenKind.hspace     
            NodeKind.call
              NodeKind.leaf: TokenKind.key_else else
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.be
                NodeKind.leaf: TokenKind.key_be be
                NodeKind.space
                  NodeKind.leaf: TokenKind.hspace  
                NodeKind.call
                  NodeKind.leaf: TokenKind.id vouch
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.id of
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.id fib
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.round_begin (
                  NodeKind.leaf: TokenKind.id n
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.other -
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.int 2
                  NodeKind.leaf: TokenKind.round_end )
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.other +
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.id fib
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.round_begin (
                  NodeKind.leaf: TokenKind.id n
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.other -
                  NodeKind.space
                    NodeKind.leaf: TokenKind.hspace  
                  NodeKind.leaf: TokenKind.int 1
                  NodeKind.leaf: TokenKind.round_end )
            NodeKind.space
              NodeKind.leaf: TokenKind.vspace 

              NodeKind.leaf: TokenKind.hspace   
          NodeKind.end
            NodeKind.leaf: TokenKind.key_end end
    NodeKind.space
      NodeKind.leaf: TokenKind.vspace 

  NodeKind.leaf: TokenKind.key_end end
  NodeKind.block
    NodeKind.space
      NodeKind.leaf: TokenKind.vspace 

Intern storage: 4096 111
Tree size: 245
Token size: 8 node size: 16 1
