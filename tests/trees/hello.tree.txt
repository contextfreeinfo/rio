NodeKind.block
  NodeKind.assign_to
    NodeKind.call
      NodeKind.leaf: TokenKind.key_use use
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.string
        NodeKind.leaf: TokenKind.string_begin_double "
        NodeKind.leaf: TokenKind.string_text c
        NodeKind.leaf: TokenKind.string_end "
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eqto =>
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_spread ..
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

  NodeKind.assign
    NodeKind.leaf: TokenKind.id main
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.id with
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id printf
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.key_be be
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.hspace   
  NodeKind.colon
    NodeKind.leaf: TokenKind.id thing
    NodeKind.leaf: TokenKind.op_colon :
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.id void
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id of
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id printf
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.string
        NodeKind.leaf: TokenKind.string_begin_double "
        NodeKind.leaf: TokenKind.string_text Hi!
        NodeKind.leaf: TokenKind.escape \n
        NodeKind.leaf: TokenKind.string_end "
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.hspace   
    NodeKind.leaf: TokenKind.comment # Abomination testing:
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.hspace   
  NodeKind.colon
    NodeKind.leaf: TokenKind.id a
    NodeKind.leaf: TokenKind.op_colon :
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.call
      NodeKind.leaf: TokenKind.id b
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.colon
        NodeKind.leaf: TokenKind.id c
        NodeKind.leaf: TokenKind.op_colon :
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id d
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
      NodeKind.leaf: TokenKind.id e
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.colon
        NodeKind.leaf: TokenKind.id f
        NodeKind.leaf: TokenKind.op_colon :
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.leaf: TokenKind.id g
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.hspace   
  NodeKind.colon
    NodeKind.leaf: TokenKind.id a
    NodeKind.leaf: TokenKind.op_colon :
    NodeKind.space
      NodeKind.leaf: TokenKind.hspace  
    NodeKind.colon
      NodeKind.leaf: TokenKind.id b
      NodeKind.leaf: TokenKind.op_colon :
      NodeKind.space
        NodeKind.leaf: TokenKind.hspace  
      NodeKind.colon
        NodeKind.leaf: TokenKind.id c
        NodeKind.leaf: TokenKind.op_colon :
        NodeKind.space
          NodeKind.leaf: TokenKind.hspace  
        NodeKind.colon
          NodeKind.leaf: TokenKind.id d
          NodeKind.leaf: TokenKind.op_colon :
          NodeKind.space
            NodeKind.leaf: TokenKind.hspace  
          NodeKind.colon
            NodeKind.leaf: TokenKind.id e
            NodeKind.leaf: TokenKind.op_colon :
            NodeKind.space
              NodeKind.leaf: TokenKind.hspace  
            NodeKind.colon
              NodeKind.leaf: TokenKind.id f
              NodeKind.leaf: TokenKind.op_colon :
              NodeKind.space
                NodeKind.leaf: TokenKind.hspace  
              NodeKind.leaf: TokenKind.id g
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

  NodeKind.leaf: TokenKind.key_end end
  NodeKind.space
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.comment # main2 = for env as !env to try void be
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.comment #   env.out.print? "Hi!"
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.comment # end
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.comment # # main3 = for env! be
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.comment # #   env.out.print? "Hi!"
    NodeKind.leaf: TokenKind.vspace 

    NodeKind.leaf: TokenKind.comment # # end
    NodeKind.leaf: TokenKind.vspace 

Intern storage: 4096 203
Tree size: 142
Token size: 8 node size: 16 1
