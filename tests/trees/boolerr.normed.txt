NodeKind.block
  NodeKind.assign
    NodeKind.leaf: TokenKind.id error
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.call
      NodeKind.leaf: TokenKind.key_struct struct
      NodeKind.as
        NodeKind.leaf: TokenKind.id message
        NodeKind.leaf: TokenKind.key_as as
        NodeKind.leaf: TokenKind.id string
      /NodeKind.as
    /NodeKind.call
  /NodeKind.assign
  NodeKind.assign
    NodeKind.leaf: TokenKind.id doc
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.call
      NodeKind.leaf: TokenKind.key_struct struct
      NodeKind.as
        NodeKind.leaf: TokenKind.id head
        NodeKind.leaf: TokenKind.key_as as
        NodeKind.call
          NodeKind.leaf: TokenKind.id maybe
          NodeKind.leaf: TokenKind.id _
        /NodeKind.call
      /NodeKind.as
    /NodeKind.call
  /NodeKind.assign
  NodeKind.assign
    NodeKind.leaf: TokenKind.id head
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.call
      NodeKind.leaf: TokenKind.key_struct struct
      NodeKind.as
        NodeKind.leaf: TokenKind.id title
        NodeKind.leaf: TokenKind.key_as as
        NodeKind.call
          NodeKind.leaf: TokenKind.id maybe
          NodeKind.leaf: TokenKind.id string
        /NodeKind.call
      /NodeKind.as
    /NodeKind.call
  /NodeKind.assign
  NodeKind.assign
    NodeKind.leaf: TokenKind.id summary
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.call
      NodeKind.leaf: TokenKind.key_struct struct
      NodeKind.as
        NodeKind.leaf: TokenKind.id title
        NodeKind.leaf: TokenKind.key_as as
        NodeKind.call
          NodeKind.leaf: TokenKind.id maybe
          NodeKind.leaf: TokenKind.id string
        /NodeKind.call
      /NodeKind.as
      NodeKind.as
        NodeKind.leaf: TokenKind.id ok
        NodeKind.leaf: TokenKind.key_as as
        NodeKind.leaf: TokenKind.id bool
      /NodeKind.as
    /NodeKind.call
  /NodeKind.assign
  NodeKind.assign
    NodeKind.leaf: TokenKind.id url
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.leaf: TokenKind.id string
  /NodeKind.assign
  NodeKind.assign
    NodeKind.leaf: TokenKind.id read-doc
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.fun
      NodeKind.fun_for
        NodeKind.leaf: TokenKind.id url
      NodeKind.fun_to
        NodeKind.call
          NodeKind.leaf: TokenKind.key_try try
          NodeKind.leaf: TokenKind.id doc
        /NodeKind.call
      /NodeKind.fun_to
      NodeKind.be
        NodeKind.call
          NodeKind.leaf: TokenKind.key_case case
          NodeKind.call
            NodeKind.dot
              NodeKind.leaf: TokenKind.id url
              NodeKind.leaf: TokenKind.op_dot .
              NodeKind.leaf: TokenKind.id has
            /NodeKind.dot
            NodeKind.string
              NodeKind.leaf: TokenKind.string_begin_double "
              NodeKind.leaf: TokenKind.string_text fail
              NodeKind.leaf: TokenKind.string_end "
            /NodeKind.string
            NodeKind.be
              NodeKind.call
                NodeKind.leaf: TokenKind.id fail
                NodeKind.dot
                  NodeKind.string
                    NodeKind.leaf: TokenKind.string_begin_double "
                    NodeKind.leaf: TokenKind.string_text Bad read of 
                    NodeKind.escape
                      NodeKind.leaf: TokenKind.id url
                    NodeKind.leaf: TokenKind.string_end "
                  /NodeKind.string
                  NodeKind.leaf: TokenKind.op_dot .
                  NodeKind.leaf: TokenKind.id format
                /NodeKind.dot
              /NodeKind.call
            /NodeKind.be
          /NodeKind.call
          NodeKind.call
            NodeKind.leaf: TokenKind.key_else else
            NodeKind.be
              NodeKind.call
                NodeKind.leaf: TokenKind.id pass
                NodeKind.call
                  NodeKind.leaf: TokenKind.key_case case
                  NodeKind.call
                    NodeKind.dot
                      NodeKind.leaf: TokenKind.id url
                      NodeKind.leaf: TokenKind.op_dot .
                      NodeKind.leaf: TokenKind.id has
                    /NodeKind.dot
                    NodeKind.string
                      NodeKind.leaf: TokenKind.string_begin_double "
                      NodeKind.leaf: TokenKind.string_text head-missing
                      NodeKind.leaf: TokenKind.string_end "
                    /NodeKind.string
                    NodeKind.be
                      NodeKind.dot
                        NodeKind.leaf: TokenKind.id _
                        NodeKind.leaf: TokenKind.op_dot .
                        NodeKind.leaf: TokenKind.id new
                      /NodeKind.dot
                    /NodeKind.be
                  /NodeKind.call
                  NodeKind.call
                    NodeKind.dot
                      NodeKind.leaf: TokenKind.id url
                      NodeKind.leaf: TokenKind.op_dot .
                      NodeKind.leaf: TokenKind.id has
                    /NodeKind.dot
                    NodeKind.string
                      NodeKind.leaf: TokenKind.string_begin_double "
                      NodeKind.leaf: TokenKind.string_text title-missing
                      NodeKind.leaf: TokenKind.string_end "
                    /NodeKind.string
                    NodeKind.be
                      NodeKind.call
                        NodeKind.leaf: TokenKind.id _
                        NodeKind.colon
                          NodeKind.leaf: TokenKind.id head
                          NodeKind.leaf: TokenKind.op_colon :
                          NodeKind.dot
                            NodeKind.leaf: TokenKind.id _
                            NodeKind.leaf: TokenKind.op_dot .
                            NodeKind.leaf: TokenKind.id new
                          /NodeKind.dot
                        /NodeKind.colon
                      /NodeKind.call
                    /NodeKind.be
                  /NodeKind.call
                  NodeKind.call
                    NodeKind.dot
                      NodeKind.leaf: TokenKind.id url
                      NodeKind.leaf: TokenKind.op_dot .
                      NodeKind.leaf: TokenKind.id has
                    /NodeKind.dot
                    NodeKind.string
                      NodeKind.leaf: TokenKind.string_begin_double "
                      NodeKind.leaf: TokenKind.string_text title-empty
                      NodeKind.leaf: TokenKind.string_end "
                    /NodeKind.string
                    NodeKind.be
                      NodeKind.call
                        NodeKind.leaf: TokenKind.id _
                        NodeKind.colon
                          NodeKind.leaf: TokenKind.id head
                          NodeKind.leaf: TokenKind.op_colon :
                          NodeKind.call
                            NodeKind.leaf: TokenKind.id _
                            NodeKind.colon
                              NodeKind.leaf: TokenKind.id title
                              NodeKind.leaf: TokenKind.op_colon :
                              NodeKind.string
                                NodeKind.leaf: TokenKind.string_begin_double "
                                NodeKind.leaf: TokenKind.string_end "
                              /NodeKind.string
                            /NodeKind.colon
                          /NodeKind.call
                        /NodeKind.colon
                      /NodeKind.call
                    /NodeKind.be
                  /NodeKind.call
                  NodeKind.call
                    NodeKind.leaf: TokenKind.key_else else
                    NodeKind.be
                      NodeKind.call
                        NodeKind.leaf: TokenKind.id _
                        NodeKind.colon
                          NodeKind.leaf: TokenKind.id head
                          NodeKind.leaf: TokenKind.op_colon :
                          NodeKind.call
                            NodeKind.leaf: TokenKind.id _
                            NodeKind.colon
                              NodeKind.leaf: TokenKind.id title
                              NodeKind.leaf: TokenKind.op_colon :
                              NodeKind.dot
                                NodeKind.string
                                  NodeKind.leaf: TokenKind.string_begin_double "
                                  NodeKind.leaf: TokenKind.string_text Title of 
                                  NodeKind.escape
                                    NodeKind.leaf: TokenKind.id url
                                  NodeKind.leaf: TokenKind.string_end "
                                /NodeKind.string
                                NodeKind.leaf: TokenKind.op_dot .
                                NodeKind.leaf: TokenKind.id format
                              /NodeKind.dot
                            /NodeKind.colon
                          /NodeKind.call
                        /NodeKind.colon
                      /NodeKind.call
                    /NodeKind.be
                  /NodeKind.call
                /NodeKind.call
              /NodeKind.call
            /NodeKind.be
          /NodeKind.call
        /NodeKind.call
      /NodeKind.be
    /NodeKind.fun
  /NodeKind.assign
  NodeKind.assign
    NodeKind.leaf: TokenKind.id build-summary
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.fun
      NodeKind.fun_for
        NodeKind.leaf: TokenKind.id doc
      NodeKind.be
        NodeKind.call
          NodeKind.leaf: TokenKind.id summary
          NodeKind.dot
            NodeKind.question
              NodeKind.dot
                NodeKind.leaf: TokenKind.id doc
                NodeKind.leaf: TokenKind.op_dot .
                NodeKind.leaf: TokenKind.id head
              /NodeKind.dot
            /NodeKind.question
            NodeKind.leaf: TokenKind.op_dot .
            NodeKind.leaf: TokenKind.id title
          /NodeKind.dot
          NodeKind.colon
            NodeKind.leaf: TokenKind.id ok
            NodeKind.leaf: TokenKind.op_colon :
            NodeKind.leaf: TokenKind.id True
          /NodeKind.colon
        /NodeKind.call
      /NodeKind.be
    /NodeKind.fun
  /NodeKind.assign
  NodeKind.assign
    NodeKind.leaf: TokenKind.id read-and-build-summary
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.fun
      NodeKind.fun_for
        NodeKind.leaf: TokenKind.id url
      NodeKind.fun_with
        NodeKind.call
          NodeKind.leaf: TokenKind.id fx
          NodeKind.leaf: TokenKind.id read-doc
        /NodeKind.call
      /NodeKind.fun_with
      NodeKind.be
        NodeKind.bool_or
          NodeKind.bool_and
            NodeKind.dot
              NodeKind.leaf: TokenKind.id url
              NodeKind.leaf: TokenKind.op_dot .
              NodeKind.leaf: TokenKind.id read-doc
            /NodeKind.dot
            NodeKind.leaf: TokenKind.key_and and
            NodeKind.dot
              NodeKind.leaf: TokenKind.id it
              NodeKind.leaf: TokenKind.op_dot .
              NodeKind.leaf: TokenKind.id build-summary
            /NodeKind.dot
          /NodeKind.bool_and
          NodeKind.leaf: TokenKind.key_or or
          NodeKind.dot
            NodeKind.leaf: TokenKind.id _
            NodeKind.leaf: TokenKind.op_dot .
            NodeKind.leaf: TokenKind.id new
          /NodeKind.dot
        /NodeKind.bool_or
      /NodeKind.be
    /NodeKind.fun
  /NodeKind.assign
  NodeKind.assign
    NodeKind.leaf: TokenKind.id is-title-non-empty
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.fun
      NodeKind.fun_for
        NodeKind.leaf: TokenKind.id doc
      NodeKind.fun_to
        NodeKind.call
          NodeKind.leaf: TokenKind.id maybe
          NodeKind.leaf: TokenKind.id bool
        /NodeKind.call
      /NodeKind.fun_to
      NodeKind.be
        NodeKind.dot
          NodeKind.dot
            NodeKind.question
              NodeKind.dot
                NodeKind.question
                  NodeKind.dot
                    NodeKind.leaf: TokenKind.id doc
                    NodeKind.leaf: TokenKind.op_dot .
                    NodeKind.leaf: TokenKind.id head
                  /NodeKind.dot
                /NodeKind.question
                NodeKind.leaf: TokenKind.op_dot .
                NodeKind.leaf: TokenKind.id title
              /NodeKind.dot
            /NodeKind.question
            NodeKind.leaf: TokenKind.op_dot .
            NodeKind.leaf: TokenKind.id is-empty
          /NodeKind.dot
          NodeKind.leaf: TokenKind.op_dot .
          NodeKind.leaf: TokenKind.id not
        /NodeKind.dot
      /NodeKind.be
    /NodeKind.fun
  /NodeKind.assign
  NodeKind.assign
    NodeKind.leaf: TokenKind.id read-whether-title-non-empty
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.fun
      NodeKind.fun_for
        NodeKind.leaf: TokenKind.id url
      NodeKind.fun_to
        NodeKind.call
          NodeKind.leaf: TokenKind.key_try try
          NodeKind.call
            NodeKind.leaf: TokenKind.id maybe
            NodeKind.leaf: TokenKind.id bool
          /NodeKind.call
        /NodeKind.call
      /NodeKind.fun_to
      NodeKind.fun_with
        NodeKind.call
          NodeKind.leaf: TokenKind.id fx
          NodeKind.leaf: TokenKind.id read-doc
        /NodeKind.call
      /NodeKind.fun_with
      NodeKind.be
        NodeKind.dot
          NodeKind.question
            NodeKind.dot
              NodeKind.leaf: TokenKind.id url
              NodeKind.leaf: TokenKind.op_dot .
              NodeKind.leaf: TokenKind.id read-doc
            /NodeKind.dot
          /NodeKind.question
          NodeKind.leaf: TokenKind.op_dot .
          NodeKind.leaf: TokenKind.id is-title-non-empty
        /NodeKind.dot
      /NodeKind.be
    /NodeKind.fun
  /NodeKind.assign
  NodeKind.assign
    NodeKind.leaf: TokenKind.id main
    NodeKind.leaf: TokenKind.op_eq =
    NodeKind.fun
      NodeKind.fun_for
        NodeKind.leaf: TokenKind.id env!
      NodeKind.fun_with
        NodeKind.call
          NodeKind.leaf: TokenKind.id fx
          NodeKind.leaf: TokenKind.id read-doc
        /NodeKind.call
      /NodeKind.fun_with
      NodeKind.be
        NodeKind.block
          NodeKind.assign
            NodeKind.leaf: TokenKind.id urls
            NodeKind.leaf: TokenKind.op_eq =
            NodeKind.call
              NodeKind.leaf: TokenKind.id list
              NodeKind.string
                NodeKind.leaf: TokenKind.string_begin_double "
                NodeKind.leaf: TokenKind.string_text good
                NodeKind.leaf: TokenKind.string_end "
              /NodeKind.string
              NodeKind.string
                NodeKind.leaf: TokenKind.string_begin_double "
                NodeKind.leaf: TokenKind.string_text title-empty
                NodeKind.leaf: TokenKind.string_end "
              /NodeKind.string
              NodeKind.string
                NodeKind.leaf: TokenKind.string_begin_double "
                NodeKind.leaf: TokenKind.string_text title-missing
                NodeKind.leaf: TokenKind.string_end "
              /NodeKind.string
              NodeKind.string
                NodeKind.leaf: TokenKind.string_begin_double "
                NodeKind.leaf: TokenKind.string_text head-missing
                NodeKind.leaf: TokenKind.string_end "
              /NodeKind.string
              NodeKind.string
                NodeKind.leaf: TokenKind.string_begin_double "
                NodeKind.leaf: TokenKind.string_text fail
                NodeKind.leaf: TokenKind.string_end "
              /NodeKind.string
            /NodeKind.call
          /NodeKind.assign
          NodeKind.assign
            NodeKind.leaf: TokenKind.id print
            NodeKind.leaf: TokenKind.op_eq =
            NodeKind.dot
              NodeKind.dot
                NodeKind.leaf: TokenKind.id env
                NodeKind.leaf: TokenKind.op_dot .
                NodeKind.leaf: TokenKind.id out
              /NodeKind.dot
              NodeKind.leaf: TokenKind.op_dot .
              NodeKind.leaf: TokenKind.id print
            /NodeKind.dot
          /NodeKind.assign
          NodeKind.call
            NodeKind.dot
              NodeKind.leaf: TokenKind.id urls
              NodeKind.leaf: TokenKind.op_dot .
              NodeKind.leaf: TokenKind.id each
            /NodeKind.dot
            NodeKind.fun
              NodeKind.fun_for
                NodeKind.leaf: TokenKind.id url
              NodeKind.be
                NodeKind.block
                  NodeKind.question
                    NodeKind.call
                      NodeKind.dot
                        NodeKind.dot
                          NodeKind.leaf: TokenKind.id env
                          NodeKind.leaf: TokenKind.op_dot .
                          NodeKind.leaf: TokenKind.id out
                        /NodeKind.dot
                        NodeKind.leaf: TokenKind.op_dot .
                        NodeKind.leaf: TokenKind.id print
                      /NodeKind.dot
                      NodeKind.string
                        NodeKind.leaf: TokenKind.string_begin_single '
                        NodeKind.leaf: TokenKind.string_text Checking "https://
                        NodeKind.escape
                          NodeKind.leaf: TokenKind.id url
                        NodeKind.leaf: TokenKind.string_text /":
                        NodeKind.leaf: TokenKind.string_end '
                      /NodeKind.string
                    /NodeKind.call
                  /NodeKind.question
                  NodeKind.assign
                    NodeKind.leaf: TokenKind.id summary
                    NodeKind.leaf: TokenKind.op_eq =
                    NodeKind.dot
                      NodeKind.leaf: TokenKind.id url
                      NodeKind.leaf: TokenKind.op_dot .
                      NodeKind.leaf: TokenKind.id read-and-build-summary
                    /NodeKind.dot
                  /NodeKind.assign
                  NodeKind.question
                    NodeKind.dot
                      NodeKind.string
                        NodeKind.leaf: TokenKind.string_begin_double "
                        NodeKind.leaf: TokenKind.string_text   Summary: 
                        NodeKind.escape
                          NodeKind.leaf: TokenKind.id summary
                        NodeKind.leaf: TokenKind.string_end "
                      /NodeKind.string
                      NodeKind.leaf: TokenKind.op_dot .
                      NodeKind.leaf: TokenKind.id print
                    /NodeKind.dot
                  /NodeKind.question
                  NodeKind.question
                    NodeKind.dot
                      NodeKind.string
                        NodeKind.leaf: TokenKind.string_begin_double "
                        NodeKind.leaf: TokenKind.string_text   Title: 
                        NodeKind.escape
                          NodeKind.bool_or
                            NodeKind.dot
                              NodeKind.leaf: TokenKind.id summary
                              NodeKind.leaf: TokenKind.op_dot .
                              NodeKind.leaf: TokenKind.id title
                            /NodeKind.dot
                            NodeKind.leaf: TokenKind.key_or or
                            NodeKind.string
                              NodeKind.leaf: TokenKind.string_begin_double "
                              NodeKind.leaf: TokenKind.string_end "
                            /NodeKind.string
                          /NodeKind.bool_or
                        /NodeKind.escape
                        NodeKind.leaf: TokenKind.string_end "
                      /NodeKind.string
                      NodeKind.leaf: TokenKind.op_dot .
                      NodeKind.leaf: TokenKind.id print
                    /NodeKind.dot
                  /NodeKind.question
                  NodeKind.assign
                    NodeKind.leaf: TokenKind.id has-title
                    NodeKind.leaf: TokenKind.op_eq =
                    NodeKind.dot
                      NodeKind.leaf: TokenKind.id url
                      NodeKind.leaf: TokenKind.op_dot .
                      NodeKind.leaf: TokenKind.id read-whether-title-non-empty
                    /NodeKind.dot
                  /NodeKind.assign
                  NodeKind.question
                    NodeKind.dot
                      NodeKind.string
                        NodeKind.leaf: TokenKind.string_begin_double "
                        NodeKind.leaf: TokenKind.string_text   Has title: 
                        NodeKind.escape
                          NodeKind.leaf: TokenKind.id has-title
                        NodeKind.leaf: TokenKind.string_text  vs 
                        NodeKind.escape
                          NodeKind.bool_or
                            NodeKind.leaf: TokenKind.id has-title
                            NodeKind.leaf: TokenKind.key_or or
                            NodeKind.string
                              NodeKind.leaf: TokenKind.string_begin_double "
                              NodeKind.leaf: TokenKind.string_end "
                            /NodeKind.string
                          /NodeKind.bool_or
                        /NodeKind.escape
                        NodeKind.leaf: TokenKind.string_end "
                      /NodeKind.string
                      NodeKind.leaf: TokenKind.op_dot .
                      NodeKind.leaf: TokenKind.id print
                    /NodeKind.dot
                  /NodeKind.question
                /NodeKind.block
              /NodeKind.be
            /NodeKind.fun
          /NodeKind.call
        /NodeKind.block
      /NodeKind.be
    /NodeKind.fun
  /NodeKind.assign
/NodeKind.block
Normed size: 402
