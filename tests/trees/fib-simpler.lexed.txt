Hi comment comment 3
(kind: id, text: 9) 'main'
(kind: hspace, text: 10) ' '
(kind: opIs, text: 11) '='
(kind: hspace, text: 10) ' '
(kind: keyFor, text: 6) 'for'
(kind: hspace, text: 10) ' '
(kind: roundBegin, text: 12) '('
(kind: roundEnd, text: 13) ')'
(kind: hspace, text: 10) ' '
(kind: keyBe, text: 3) 'be'
(kind: vspace, text: 14) '
'
(kind: hspace, text: 15) '  '
(kind: id, text: 16) 'each'
(kind: hspace, text: 10) ' '
(kind: roundBegin, text: 12) '('
(kind: id, text: 17) 'thru'
(kind: hspace, text: 10) ' '
(kind: integer, text: 18) '0'
(kind: hspace, text: 10) ' '
(kind: integer, text: 19) '9'
(kind: roundEnd, text: 13) ')'
(kind: hspace, text: 10) ' '
(kind: keyFor, text: 6) 'for'
(kind: hspace, text: 10) ' '
(kind: id, text: 20) 'n'
(kind: hspace, text: 10) ' '
(kind: keyBe, text: 3) 'be'
(kind: vspace, text: 14) '
'
(kind: hspace, text: 21) '    '
(kind: id, text: 22) 'void'
(kind: hspace, text: 10) ' '
(kind: keyOf, text: 7) 'of'
(kind: hspace, text: 10) ' '
(kind: id, text: 23) 'printf'
(kind: hspace, text: 10) ' '
(kind: quoteDouble, text: 24) '"'
(kind: stringText, text: 25) 'fib(%d) = %d'
(kind: stringEscape, text: 26) '\n'
(kind: quoteDouble, text: 24) '"'
(kind: hspace, text: 10) ' '
(kind: id, text: 20) 'n'
(kind: hspace, text: 10) ' '
(kind: roundBegin, text: 12) '('
(kind: id, text: 27) 'fib'
(kind: hspace, text: 10) ' '
(kind: id, text: 20) 'n'
(kind: roundEnd, text: 13) ')'
(kind: vspace, text: 14) '
'
(kind: hspace, text: 15) '  '
(kind: keyEnd, text: 5) 'end'
(kind: vspace, text: 14) '
'
(kind: keyEnd, text: 5) 'end'
(kind: vspace, text: 28) '

'
(kind: comment, text: 29) '# Params without default values are positional.'
(kind: vspace, text: 14) '
'
(kind: id, text: 27) 'fib'
(kind: hspace, text: 10) ' '
(kind: opIs, text: 11) '='
(kind: hspace, text: 10) ' '
(kind: keyFor, text: 6) 'for'
(kind: hspace, text: 10) ' '
(kind: id, text: 20) 'n'
(kind: hspace, text: 10) ' '
(kind: keyAs, text: 2) 'as'
(kind: hspace, text: 10) ' '
(kind: id, text: 30) 'int'
(kind: hspace, text: 10) ' '
(kind: keyTo, text: 8) 'to'
(kind: hspace, text: 10) ' '
(kind: id, text: 30) 'int'
(kind: hspace, text: 10) ' '
(kind: keyBe, text: 3) 'be'
(kind: vspace, text: 14) '
'
(kind: hspace, text: 15) '  '
(kind: id, text: 31) 'case'
(kind: hspace, text: 10) ' '
(kind: keyOf, text: 7) 'of'
(kind: vspace, text: 14) '
'
(kind: hspace, text: 21) '    '
(kind: keyFor, text: 6) 'for'
(kind: hspace, text: 10) ' '
(kind: id, text: 20) 'n'
(kind: hspace, text: 10) ' '
(kind: opLe, text: 32) '<='
(kind: hspace, text: 10) ' '
(kind: integer, text: 18) '0'
(kind: hspace, text: 10) ' '
(kind: keyBe, text: 3) 'be'
(kind: hspace, text: 10) ' '
(kind: integer, text: 18) '0'
(kind: vspace, text: 14) '
'
(kind: hspace, text: 21) '    '
(kind: keyFor, text: 6) 'for'
(kind: hspace, text: 10) ' '
(kind: id, text: 20) 'n'
(kind: hspace, text: 10) ' '
(kind: opEq, text: 33) '=='
(kind: hspace, text: 10) ' '
(kind: integer, text: 34) '1'
(kind: hspace, text: 10) ' '
(kind: keyBe, text: 3) 'be'
(kind: hspace, text: 10) ' '
(kind: integer, text: 34) '1'
(kind: vspace, text: 14) '
'
(kind: hspace, text: 21) '    '
(kind: keyElse, text: 4) 'else'
(kind: hspace, text: 10) ' '
(kind: keyBe, text: 3) 'be'
(kind: hspace, text: 10) ' '
(kind: id, text: 27) 'fib'
(kind: hspace, text: 10) ' '
(kind: roundBegin, text: 12) '('
(kind: id, text: 20) 'n'
(kind: hspace, text: 10) ' '
(kind: opSub, text: 35) '-'
(kind: hspace, text: 10) ' '
(kind: integer, text: 36) '2'
(kind: roundEnd, text: 13) ')'
(kind: hspace, text: 10) ' '
(kind: opAdd, text: 37) '+'
(kind: hspace, text: 10) ' '
(kind: id, text: 27) 'fib'
(kind: hspace, text: 10) ' '
(kind: roundBegin, text: 12) '('
(kind: id, text: 20) 'n'
(kind: hspace, text: 10) ' '
(kind: opSub, text: 35) '-'
(kind: hspace, text: 10) ' '
(kind: integer, text: 34) '1'
(kind: roundEnd, text: 13) ')'
(kind: vspace, text: 14) '
'
(kind: hspace, text: 15) '  '
(kind: keyEnd, text: 5) 'end'
(kind: vspace, text: 14) '
'
(kind: keyEnd, text: 5) 'end'
(kind: vspace, text: 14) '
'
